import javax.swing.*;
import java.awt.*;
import java.awt.geom.Path2D;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Random;

public class ViewerFrame extends JFrame {
    static void crossProduct(double vect_A[], double vect_B[],
                             double cross_P[])

    {

        cross_P[0] = vect_A[1] * vect_B[2]
                - vect_A[2] * vect_B[1];
        cross_P[1] = vect_A[2] * vect_B[0]
                - vect_A[0] * vect_B[2];
        cross_P[2] = vect_A[0] * vect_B[1]
                - vect_A[1] * vect_B[0];
    }


    public ViewerFrame() {
        setSize(400, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        JSlider yawSlider = new JSlider(JSlider.HORIZONTAL, 0, 360, 180);
        add(yawSlider, BorderLayout.SOUTH);

        JSlider pitchSlider = new JSlider(JSlider.VERTICAL, -90, 90, 0);
        add(pitchSlider, BorderLayout.EAST);

        JSlider rollSlider = new JSlider(JSlider.VERTICAL, -90, 90, 0);
        add(rollSlider, BorderLayout.WEST);



        JPanel renderPanel = new JPanel() {
            public void paintComponent(Graphics g) {
                Graphics2D graphics2D = (Graphics2D) g;
                graphics2D.setColor(Color.BLACK);
                graphics2D.fillRect(0, 0, getWidth(), getHeight());
                graphics2D.setColor(Color.WHITE);

                // Put the origin to the center of the drawing area
                graphics2D.translate(getWidth() / 2, getHeight() / 2);

                Matrix xzRotation = Matrix.getXZRotationMatrix(yawSlider.getValue());
                Matrix xzRotationAlt = Matrix.getXZRotationMatrixAlt(yawSlider.getValue());

                Matrix yzRotation = Matrix.getYZRotationMatrix(pitchSlider.getValue());
                Matrix yzRotationAlt = Matrix.getYZRotationMatrixAlt(pitchSlider.getValue());

                Matrix xyRotation = Matrix.getXYRotationMatrix(rollSlider.getValue());

                Matrix rotationMatrix = xzRotation.multiply(yzRotation).multiply(xyRotation);
                Matrix rotationMatrixAlt = xzRotationAlt.multiply(yzRotationAlt).multiply(xyRotation);

                ArrayList<Triangle> tris = getTetrahedronTriangles();
                tris.sort(new Comparator<Triangle>() {
                    @Override
                    public int compare(Triangle o1, Triangle o2) {
                        return Double.compare(o1.v1().z, o2.v1().z);
                    }
                });
                for (Triangle triangle : tris) {
                    Path2D edgePath = new Path2D.Double();
                    Matrix triangleMatrix = new Matrix( new double[] {
                            triangle.v1().x(), triangle.v1().y(), triangle.v1().z(),
                            triangle.v2().x(), triangle.v2().y(), triangle.v2().z(),
                            triangle.v3().x(), triangle.v3().y(), triangle.v3().z()
                    }, 3, 3);
                    
//                    Matrix transformedTriangle = triangleMatrix.multiply(rotationMatrix);
                    Matrix transformedTriangle = triangleMatrix.multiply(rotationMatrixAlt);
//
//                    System.out.println("Normal:");
//                    System.out.println(transformedTriangle);
//                    System.out.println("Alt:");
//                    System.out.println(transformedTriangleAlt);


                    double[] vA = new double[] {triangle.v2().x() - triangle.v1().x(), triangle.v2().y() - triangle.v1().y(), triangle.v2().z() - triangle.v1().z()};
                    double[] vB = new double[] {triangle.v3().x() - triangle.v1().x(), triangle.v3().y() - triangle.v1().y(), triangle.v3().z() - triangle.v1().z()};
                    double[] outp = new double[3];
                    crossProduct(vA, vB, outp);
                    double outp_magnitude = Math.sqrt(outp[0]*outp[0] + outp[1]*outp[1] + outp[2]*outp[2]);
                    outp[0] /= outp_magnitude;
                    outp[1] /= outp_magnitude;
                    outp[2] /= outp_magnitude;
                    double collinearity = 0;
                    collinearity += outp[0]*1;
                    collinearity += outp[1]*1;
                    collinearity += outp[2]*1;

                    graphics2D.setColor(Color.getHSBColor( 1, 1, (float)collinearity));

                    edgePath.moveTo(transformedTriangle.get(0, 0), transformedTriangle.get(0, 1));
                    edgePath.lineTo(transformedTriangle.get(1, 0), transformedTriangle.get(1, 1));
                    edgePath.lineTo(transformedTriangle.get(2, 0), transformedTriangle.get(2, 1));
                    edgePath.closePath();
                    graphics2D.fill(edgePath);
                }
            }

            private ArrayList<Triangle> getTetrahedronTriangles() {
                ArrayList<Triangle> tris = new ArrayList<>();
                /*tris.add(new Triangle(new Vertex(100, 100, 100),
                        new Vertex(-100, -100, 100),
                        new Vertex(-100, 100, -100),
                        Color.WHITE));
                tris.add(new Triangle(new Vertex(100, 100, 100),
                        new Vertex(-100, -100, 100),
                        new Vertex(100, -100, -100),
                        Color.RED));
                tris.add(new Triangle(new Vertex(-100, 100, -100),
                        new Vertex(100, -100, -100),
                        new Vertex(100, 100, 100),
                        Color.GREEN));
                tris.add(new Triangle(new Vertex(-100, 100, -100),
                        new Vertex(100, -100, -100),
                        new Vertex(-100, -100, 100),
                        Color.BLUE));*/

                tris.add(new Triangle(new Vertex(0.351563, 0.242188, 0.828125),new Vertex(0.445313, 0.15625, 0.78125),new Vertex(0.476563, 0.242188, 0.773438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.476563, 0.242188, 0.773438),new Vertex(-0.445313, 0.15625, 0.78125),new Vertex(-0.351563, 0.242188, 0.828125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.351563, 0.117188, 0.804688),new Vertex(0.445313, 0.15625, 0.78125),new Vertex(0.351563, 0.242188, 0.828125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.351563, 0.242188, 0.828125),new Vertex(-0.445313, 0.15625, 0.78125),new Vertex(-0.351563, 0.117188, 0.804688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.351563, 0.242188, 0.828125),new Vertex(0.265625, 0.15625, 0.820313),new Vertex(0.351563, 0.117188, 0.804688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.351563, 0.117188, 0.804688),new Vertex(-0.265625, 0.15625, 0.820313),new Vertex(-0.351563, 0.242188, 0.828125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.351563, 0.242188, 0.828125),new Vertex(0.226563, 0.242188, 0.820313),new Vertex(0.265625, 0.15625, 0.820313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.265625, 0.15625, 0.820313),new Vertex(-0.226563, 0.242188, 0.820313),new Vertex(-0.351563, 0.242188, 0.828125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.351563, 0.242188, 0.828125),new Vertex(0.265625, 0.335938, 0.820313),new Vertex(0.226563, 0.242188, 0.820313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.226563, 0.242188, 0.820313),new Vertex(-0.265625, 0.335938, 0.820313),new Vertex(-0.351563, 0.242188, 0.828125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.351563, 0.242188, 0.828125),new Vertex(0.351563, 0.375, 0.804688),new Vertex(0.265625, 0.335938, 0.820313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.265625, 0.335938, 0.820313),new Vertex(-0.351563, 0.375, 0.804688),new Vertex(-0.351563, 0.242188, 0.828125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.351563, 0.242188, 0.828125),new Vertex(0.445313, 0.335938, 0.78125),new Vertex(0.351563, 0.375, 0.804688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.351563, 0.375, 0.804688),new Vertex(-0.445313, 0.335938, 0.78125),new Vertex(-0.351563, 0.242188, 0.828125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.351563, 0.242188, 0.828125),new Vertex(0.476563, 0.242188, 0.773438),new Vertex(0.445313, 0.335938, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.445313, 0.335938, 0.78125),new Vertex(-0.476563, 0.242188, 0.773438),new Vertex(-0.351563, 0.242188, 0.828125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.09375, -0.75, 0.664063),new Vertex(0.046875, -0.851563, 0.632813),new Vertex(0.09375, -0.8125, 0.640625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.09375, -0.8125, 0.640625),new Vertex(-0.046875, -0.851563, 0.632813),new Vertex(-0.09375, -0.75, 0.664063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, 0.40625, 0.601563),new Vertex(0.109375, 0.460938, 0.609375),new Vertex(0.0, 0.570313, 0.570313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, 0.570313, 0.570313),new Vertex(-0.109375, 0.460938, 0.609375),new Vertex(0.0, 0.40625, 0.601563),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.21875, -0.28125, 0.429688),new Vertex(0.210938, -0.390625, 0.164063),new Vertex(0.40625, -0.171875, 0.148438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.40625, -0.171875, 0.148438),new Vertex(-0.210938, -0.390625, 0.164063),new Vertex(-0.21875, -0.28125, 0.429688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.4375, -0.09375, 0.46875),new Vertex(0.203125, -0.171875, 0.5),new Vertex(0.210938, -0.226563, 0.46875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.210938, -0.226563, 0.46875),new Vertex(-0.203125, -0.171875, 0.5),new Vertex(-0.4375, -0.09375, 0.46875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.335938, 0.054688, -0.664063),new Vertex(0.484375, 0.023438, -0.546875),new Vertex(0.34375, -0.148438, -0.539063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.34375, -0.148438, -0.539063),new Vertex(-0.484375, 0.023438, -0.546875),new Vertex(-0.335938, 0.054688, -0.664063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.726563, 0.0, -0.070313),new Vertex(0.71875, -0.023438, -0.171875),new Vertex(0.71875, 0.039063, -0.1875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.71875, 0.039063, -0.1875),new Vertex(-0.71875, -0.023438, -0.171875),new Vertex(-0.726563, 0.0, -0.070313),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.039063, 0.328125, -0.414063),new Vertex(1.085938, 0.273438, -0.390625),new Vertex(1.1875, 0.34375, -0.484375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.1875, 0.34375, -0.484375),new Vertex(-1.085938, 0.273438, -0.390625),new Vertex(-1.039063, 0.328125, -0.414063),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.25, 0.46875, -0.546875),new Vertex(1.367188, 0.296875, -0.5),new Vertex(1.3125, 0.054688, -0.53125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.3125, 0.054688, -0.53125),new Vertex(-1.367188, 0.296875, -0.5),new Vertex(-1.25, 0.46875, -0.546875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.789063, -0.125, -0.328125),new Vertex(-0.640625, -0.007813, -0.429688),new Vertex(-0.59375, -0.125, -0.164063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.789063, -0.125, -0.328125),new Vertex(-0.59375, -0.125, -0.164063),new Vertex(-0.773438, -0.140625, -0.125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.59375, -0.125, -0.164063),new Vertex(0.640625, -0.007813, -0.429688),new Vertex(0.789063, -0.125, -0.328125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.59375, -0.125, -0.164063),new Vertex(0.789063, -0.125, -0.328125),new Vertex(0.773438, -0.140625, -0.125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.789063, -0.125, -0.328125),new Vertex(-0.859375, 0.382813, -0.382813),new Vertex(-0.773438, 0.265625, -0.4375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.789063, -0.125, -0.328125),new Vertex(-0.773438, 0.265625, -0.4375),new Vertex(-0.640625, -0.007813, -0.429688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.773438, 0.265625, -0.4375),new Vertex(0.859375, 0.382813, -0.382813),new Vertex(0.789063, -0.125, -0.328125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.773438, 0.265625, -0.4375),new Vertex(0.789063, -0.125, -0.328125),new Vertex(0.640625, -0.007813, -0.429688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.890625, 0.40625, -0.234375),new Vertex(-0.820313, 0.328125, -0.203125),new Vertex(-0.859375, 0.382813, -0.382813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.820313, 0.328125, -0.203125),new Vertex(-0.773438, 0.265625, -0.4375),new Vertex(-0.859375, 0.382813, -0.382813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.773438, 0.265625, -0.4375),new Vertex(0.820313, 0.328125, -0.203125),new Vertex(0.859375, 0.382813, -0.382813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.820313, 0.328125, -0.203125),new Vertex(0.890625, 0.40625, -0.234375),new Vertex(0.859375, 0.382813, -0.382813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.3125, 0.054688, -0.53125),new Vertex(-1.25, 0.46875, -0.546875),new Vertex(-1.023438, 0.4375, -0.484375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.3125, 0.054688, -0.53125),new Vertex(-1.023438, 0.4375, -0.484375),new Vertex(-1.039063, -0.085938, -0.492188),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.023438, 0.4375, -0.484375),new Vertex(1.25, 0.46875, -0.546875),new Vertex(1.3125, 0.054688, -0.53125),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.023438, 0.4375, -0.484375),new Vertex(1.3125, 0.054688, -0.53125),new Vertex(1.039063, -0.085938, -0.492188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.789063, -0.125, -0.328125),new Vertex(-1.039063, -0.085938, -0.492188),new Vertex(-0.859375, 0.382813, -0.382813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.039063, -0.085938, -0.492188),new Vertex(-1.023438, 0.4375, -0.484375),new Vertex(-0.859375, 0.382813, -0.382813),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.023438, 0.4375, -0.484375),new Vertex(1.039063, -0.085938, -0.492188),new Vertex(0.859375, 0.382813, -0.382813),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.039063, -0.085938, -0.492188),new Vertex(0.789063, -0.125, -0.328125),new Vertex(0.859375, 0.382813, -0.382813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.023438, 0.4375, -0.484375),new Vertex(-1.023438, 0.476563, -0.3125),new Vertex(-0.859375, 0.382813, -0.382813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.023438, 0.476563, -0.3125),new Vertex(-0.890625, 0.40625, -0.234375),new Vertex(-0.859375, 0.382813, -0.382813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.890625, 0.40625, -0.234375),new Vertex(1.023438, 0.476563, -0.3125),new Vertex(0.859375, 0.382813, -0.382813),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.023438, 0.476563, -0.3125),new Vertex(1.023438, 0.4375, -0.484375),new Vertex(0.859375, 0.382813, -0.382813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.25, 0.46875, -0.546875),new Vertex(-1.234375, 0.507813, -0.421875),new Vertex(-1.023438, 0.4375, -0.484375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.234375, 0.507813, -0.421875),new Vertex(-1.023438, 0.476563, -0.3125),new Vertex(-1.023438, 0.4375, -0.484375),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.023438, 0.476563, -0.3125),new Vertex(1.234375, 0.507813, -0.421875),new Vertex(1.023438, 0.4375, -0.484375),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.234375, 0.507813, -0.421875),new Vertex(1.25, 0.46875, -0.546875),new Vertex(1.023438, 0.4375, -0.484375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.367188, 0.296875, -0.5),new Vertex(-1.351563, 0.320313, -0.421875),new Vertex(-1.25, 0.46875, -0.546875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.351563, 0.320313, -0.421875),new Vertex(-1.234375, 0.507813, -0.421875),new Vertex(-1.25, 0.46875, -0.546875),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.234375, 0.507813, -0.421875),new Vertex(1.351563, 0.320313, -0.421875),new Vertex(1.25, 0.46875, -0.546875),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.351563, 0.320313, -0.421875),new Vertex(1.367188, 0.296875, -0.5),new Vertex(1.25, 0.46875, -0.546875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.3125, 0.054688, -0.53125),new Vertex(-1.28125, 0.054688, -0.429688),new Vertex(-1.367188, 0.296875, -0.5),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.28125, 0.054688, -0.429688),new Vertex(-1.351563, 0.320313, -0.421875),new Vertex(-1.367188, 0.296875, -0.5),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.351563, 0.320313, -0.421875),new Vertex(1.28125, 0.054688, -0.429688),new Vertex(1.367188, 0.296875, -0.5),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.28125, 0.054688, -0.429688),new Vertex(1.3125, 0.054688, -0.53125),new Vertex(1.367188, 0.296875, -0.5),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.039063, -0.085938, -0.492188),new Vertex(-1.039063, -0.101563, -0.328125),new Vertex(-1.28125, 0.054688, -0.429688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.039063, -0.085938, -0.492188),new Vertex(-1.28125, 0.054688, -0.429688),new Vertex(-1.3125, 0.054688, -0.53125),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.28125, 0.054688, -0.429688),new Vertex(1.039063, -0.101563, -0.328125),new Vertex(1.039063, -0.085938, -0.492188),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.28125, 0.054688, -0.429688),new Vertex(1.039063, -0.085938, -0.492188),new Vertex(1.3125, 0.054688, -0.53125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.789063, -0.125, -0.328125),new Vertex(-0.773438, -0.140625, -0.125),new Vertex(-1.039063, -0.101563, -0.328125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.789063, -0.125, -0.328125),new Vertex(-1.039063, -0.101563, -0.328125),new Vertex(-1.039063, -0.085938, -0.492188),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.039063, -0.101563, -0.328125),new Vertex(0.773438, -0.140625, -0.125),new Vertex(0.789063, -0.125, -0.328125),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.039063, -0.101563, -0.328125),new Vertex(0.789063, -0.125, -0.328125),new Vertex(1.039063, -0.085938, -0.492188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.109375, 0.210938, -0.390625),new Vertex(-1.085938, 0.273438, -0.390625),new Vertex(-1.1875, 0.34375, -0.484375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.109375, 0.210938, -0.390625),new Vertex(-1.1875, 0.34375, -0.484375),new Vertex(-1.257813, 0.242188, -0.492188),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.1875, 0.34375, -0.484375),new Vertex(1.085938, 0.273438, -0.390625),new Vertex(1.109375, 0.210938, -0.390625),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.1875, 0.34375, -0.484375),new Vertex(1.109375, 0.210938, -0.390625),new Vertex(1.257813, 0.242188, -0.492188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.054688, 0.1875, -0.382813),new Vertex(-1.109375, 0.210938, -0.390625),new Vertex(-1.210938, 0.085938, -0.484375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.109375, 0.210938, -0.390625),new Vertex(-1.257813, 0.242188, -0.492188),new Vertex(-1.210938, 0.085938, -0.484375),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.257813, 0.242188, -0.492188),new Vertex(1.109375, 0.210938, -0.390625),new Vertex(1.210938, 0.085938, -0.484375),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.109375, 0.210938, -0.390625),new Vertex(1.054688, 0.1875, -0.382813),new Vertex(1.210938, 0.085938, -0.484375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.0, 0.125, -0.367188),new Vertex(-1.054688, 0.1875, -0.382813),new Vertex(-1.046875, 0.0, -0.421875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.054688, 0.1875, -0.382813),new Vertex(-1.210938, 0.085938, -0.484375),new Vertex(-1.046875, 0.0, -0.421875),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.210938, 0.085938, -0.484375),new Vertex(1.054688, 0.1875, -0.382813),new Vertex(1.046875, 0.0, -0.421875),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.054688, 0.1875, -0.382813),new Vertex(1.0, 0.125, -0.367188),new Vertex(1.046875, 0.0, -0.421875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.9375, 0.0625, -0.335938),new Vertex(-1.0, 0.125, -0.367188),new Vertex(-1.046875, 0.0, -0.421875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.9375, 0.0625, -0.335938),new Vertex(-1.046875, 0.0, -0.421875),new Vertex(-0.882813, -0.015625, -0.265625),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.046875, 0.0, -0.421875),new Vertex(1.0, 0.125, -0.367188),new Vertex(0.9375, 0.0625, -0.335938),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.046875, 0.0, -0.421875),new Vertex(0.9375, 0.0625, -0.335938),new Vertex(0.882813, -0.015625, -0.265625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.9375, 0.0625, -0.335938),new Vertex(-0.882813, -0.015625, -0.265625),new Vertex(-0.851563, 0.015625, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.882813, -0.015625, -0.265625),new Vertex(-0.8125, -0.015625, -0.320313),new Vertex(-0.851563, 0.015625, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.8125, -0.015625, -0.320313),new Vertex(0.882813, -0.015625, -0.265625),new Vertex(0.851563, 0.015625, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.882813, -0.015625, -0.265625),new Vertex(0.9375, 0.0625, -0.335938),new Vertex(0.851563, 0.015625, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.84375, 0.171875, -0.320313),new Vertex(-0.890625, 0.109375, -0.328125),new Vertex(-0.828125, 0.078125, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.84375, 0.171875, -0.320313),new Vertex(-0.828125, 0.078125, -0.320313),new Vertex(-0.765625, 0.09375, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.828125, 0.078125, -0.320313),new Vertex(0.890625, 0.109375, -0.328125),new Vertex(0.84375, 0.171875, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.828125, 0.078125, -0.320313),new Vertex(0.84375, 0.171875, -0.320313),new Vertex(0.765625, 0.09375, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.890625, 0.109375, -0.328125),new Vertex(-0.84375, 0.171875, -0.320313),new Vertex(-0.960938, 0.171875, -0.351563),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.84375, 0.171875, -0.320313),new Vertex(-0.890625, 0.234375, -0.320313),new Vertex(-0.960938, 0.171875, -0.351563),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.890625, 0.234375, -0.320313),new Vertex(0.84375, 0.171875, -0.320313),new Vertex(0.960938, 0.171875, -0.351563),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.84375, 0.171875, -0.320313),new Vertex(0.890625, 0.109375, -0.328125),new Vertex(0.960938, 0.171875, -0.351563),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.015625, 0.234375, -0.375),new Vertex(-0.960938, 0.171875, -0.351563),new Vertex(-0.953125, 0.289063, -0.34375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.960938, 0.171875, -0.351563),new Vertex(-0.890625, 0.234375, -0.320313),new Vertex(-0.953125, 0.289063, -0.34375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.890625, 0.234375, -0.320313),new Vertex(0.960938, 0.171875, -0.351563),new Vertex(0.953125, 0.289063, -0.34375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.960938, 0.171875, -0.351563),new Vertex(1.015625, 0.234375, -0.375),new Vertex(0.953125, 0.289063, -0.34375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.015625, 0.234375, -0.375),new Vertex(-0.953125, 0.289063, -0.34375),new Vertex(-1.039063, 0.328125, -0.414063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.015625, 0.234375, -0.375),new Vertex(-1.039063, 0.328125, -0.414063),new Vertex(-1.085938, 0.273438, -0.390625),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.039063, 0.328125, -0.414063),new Vertex(0.953125, 0.289063, -0.34375),new Vertex(1.015625, 0.234375, -0.375),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.039063, 0.328125, -0.414063),new Vertex(1.015625, 0.234375, -0.375),new Vertex(1.085938, 0.273438, -0.390625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.109375, 0.210938, -0.390625),new Vertex(-1.054688, 0.1875, -0.382813),new Vertex(-1.085938, 0.273438, -0.390625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.054688, 0.1875, -0.382813),new Vertex(-1.015625, 0.234375, -0.375),new Vertex(-1.085938, 0.273438, -0.390625),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.015625, 0.234375, -0.375),new Vertex(1.054688, 0.1875, -0.382813),new Vertex(1.085938, 0.273438, -0.390625),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.054688, 0.1875, -0.382813),new Vertex(1.109375, 0.210938, -0.390625),new Vertex(1.085938, 0.273438, -0.390625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.054688, 0.1875, -0.382813),new Vertex(-1.0, 0.125, -0.367188),new Vertex(-0.960938, 0.171875, -0.351563),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.054688, 0.1875, -0.382813),new Vertex(-0.960938, 0.171875, -0.351563),new Vertex(-1.015625, 0.234375, -0.375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.960938, 0.171875, -0.351563),new Vertex(1.0, 0.125, -0.367188),new Vertex(1.054688, 0.1875, -0.382813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.960938, 0.171875, -0.351563),new Vertex(1.054688, 0.1875, -0.382813),new Vertex(1.015625, 0.234375, -0.375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.0, 0.125, -0.367188),new Vertex(-0.9375, 0.0625, -0.335938),new Vertex(-0.960938, 0.171875, -0.351563),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.9375, 0.0625, -0.335938),new Vertex(-0.890625, 0.109375, -0.328125),new Vertex(-0.960938, 0.171875, -0.351563),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.890625, 0.109375, -0.328125),new Vertex(0.9375, 0.0625, -0.335938),new Vertex(0.960938, 0.171875, -0.351563),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.9375, 0.0625, -0.335938),new Vertex(1.0, 0.125, -0.367188),new Vertex(0.960938, 0.171875, -0.351563),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.9375, 0.0625, -0.335938),new Vertex(-0.851563, 0.015625, -0.320313),new Vertex(-0.890625, 0.109375, -0.328125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.851563, 0.015625, -0.320313),new Vertex(-0.828125, 0.078125, -0.320313),new Vertex(-0.890625, 0.109375, -0.328125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.828125, 0.078125, -0.320313),new Vertex(0.851563, 0.015625, -0.320313),new Vertex(0.890625, 0.109375, -0.328125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.851563, 0.015625, -0.320313),new Vertex(0.9375, 0.0625, -0.335938),new Vertex(0.890625, 0.109375, -0.328125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.046875, 0.0, -0.421875),new Vertex(-1.039063, 0.0, -0.367188),new Vertex(-0.882813, -0.015625, -0.265625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.039063, 0.0, -0.367188),new Vertex(-0.882813, -0.023438, -0.210938),new Vertex(-0.882813, -0.015625, -0.265625),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.882813, -0.023438, -0.210938),new Vertex(1.039063, 0.0, -0.367188),new Vertex(0.882813, -0.015625, -0.265625),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.039063, 0.0, -0.367188),new Vertex(1.046875, 0.0, -0.421875),new Vertex(0.882813, -0.015625, -0.265625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.210938, 0.085938, -0.484375),new Vertex(-1.1875, 0.09375, -0.445313),new Vertex(-1.046875, 0.0, -0.421875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.1875, 0.09375, -0.445313),new Vertex(-1.039063, 0.0, -0.367188),new Vertex(-1.046875, 0.0, -0.421875),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.039063, 0.0, -0.367188),new Vertex(1.1875, 0.09375, -0.445313),new Vertex(1.046875, 0.0, -0.421875),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.1875, 0.09375, -0.445313),new Vertex(1.210938, 0.085938, -0.484375),new Vertex(1.046875, 0.0, -0.421875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.257813, 0.242188, -0.492188),new Vertex(-1.234375, 0.25, -0.445313),new Vertex(-1.210938, 0.085938, -0.484375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.234375, 0.25, -0.445313),new Vertex(-1.1875, 0.09375, -0.445313),new Vertex(-1.210938, 0.085938, -0.484375),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.1875, 0.09375, -0.445313),new Vertex(1.234375, 0.25, -0.445313),new Vertex(1.210938, 0.085938, -0.484375),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.234375, 0.25, -0.445313),new Vertex(1.257813, 0.242188, -0.492188),new Vertex(1.210938, 0.085938, -0.484375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.1875, 0.34375, -0.484375),new Vertex(-1.171875, 0.359375, -0.4375),new Vertex(-1.234375, 0.25, -0.445313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.1875, 0.34375, -0.484375),new Vertex(-1.234375, 0.25, -0.445313),new Vertex(-1.257813, 0.242188, -0.492188),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.234375, 0.25, -0.445313),new Vertex(1.171875, 0.359375, -0.4375),new Vertex(1.1875, 0.34375, -0.484375),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.234375, 0.25, -0.445313),new Vertex(1.1875, 0.34375, -0.484375),new Vertex(1.257813, 0.242188, -0.492188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.039063, 0.328125, -0.414063),new Vertex(-1.023438, 0.34375, -0.359375),new Vertex(-1.171875, 0.359375, -0.4375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.039063, 0.328125, -0.414063),new Vertex(-1.171875, 0.359375, -0.4375),new Vertex(-1.1875, 0.34375, -0.484375),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.171875, 0.359375, -0.4375),new Vertex(1.023438, 0.34375, -0.359375),new Vertex(1.039063, 0.328125, -0.414063),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.171875, 0.359375, -0.4375),new Vertex(1.039063, 0.328125, -0.414063),new Vertex(1.1875, 0.34375, -0.484375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.953125, 0.289063, -0.34375),new Vertex(-0.945313, 0.304688, -0.289063),new Vertex(-1.023438, 0.34375, -0.359375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.953125, 0.289063, -0.34375),new Vertex(-1.023438, 0.34375, -0.359375),new Vertex(-1.039063, 0.328125, -0.414063),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.023438, 0.34375, -0.359375),new Vertex(0.945313, 0.304688, -0.289063),new Vertex(0.953125, 0.289063, -0.34375),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.023438, 0.34375, -0.359375),new Vertex(0.953125, 0.289063, -0.34375),new Vertex(1.039063, 0.328125, -0.414063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.882813, -0.015625, -0.265625),new Vertex(-0.882813, -0.023438, -0.210938),new Vertex(-0.8125, -0.015625, -0.273438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.882813, -0.015625, -0.265625),new Vertex(-0.8125, -0.015625, -0.273438),new Vertex(-0.8125, -0.015625, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.8125, -0.015625, -0.273438),new Vertex(0.882813, -0.023438, -0.210938),new Vertex(0.882813, -0.015625, -0.265625),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.8125, -0.015625, -0.273438),new Vertex(0.882813, -0.015625, -0.265625),new Vertex(0.8125, -0.015625, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.8125, -0.015625, -0.320313),new Vertex(-0.8125, -0.015625, -0.273438),new Vertex(-0.84375, 0.015625, -0.273438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.8125, -0.015625, -0.320313),new Vertex(-0.84375, 0.015625, -0.273438),new Vertex(-0.851563, 0.015625, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.84375, 0.015625, -0.273438),new Vertex(0.8125, -0.015625, -0.273438),new Vertex(0.8125, -0.015625, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.84375, 0.015625, -0.273438),new Vertex(0.8125, -0.015625, -0.320313),new Vertex(0.851563, 0.015625, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.851563, 0.015625, -0.320313),new Vertex(-0.84375, 0.015625, -0.273438),new Vertex(-0.828125, 0.078125, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.84375, 0.015625, -0.273438),new Vertex(-0.820313, 0.085938, -0.273438),new Vertex(-0.828125, 0.078125, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.820313, 0.085938, -0.273438),new Vertex(0.84375, 0.015625, -0.273438),new Vertex(0.828125, 0.078125, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.84375, 0.015625, -0.273438),new Vertex(0.851563, 0.015625, -0.320313),new Vertex(0.828125, 0.078125, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.828125, 0.078125, -0.320313),new Vertex(-0.820313, 0.085938, -0.273438),new Vertex(-0.765625, 0.09375, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.820313, 0.085938, -0.273438),new Vertex(-0.757813, 0.09375, -0.273438),new Vertex(-0.765625, 0.09375, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.757813, 0.09375, -0.273438),new Vertex(0.820313, 0.085938, -0.273438),new Vertex(0.765625, 0.09375, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.820313, 0.085938, -0.273438),new Vertex(0.828125, 0.078125, -0.320313),new Vertex(0.765625, 0.09375, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.765625, 0.09375, -0.320313),new Vertex(-0.757813, 0.09375, -0.273438),new Vertex(-0.835938, 0.171875, -0.273438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.765625, 0.09375, -0.320313),new Vertex(-0.835938, 0.171875, -0.273438),new Vertex(-0.84375, 0.171875, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.835938, 0.171875, -0.273438),new Vertex(0.757813, 0.09375, -0.273438),new Vertex(0.765625, 0.09375, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.835938, 0.171875, -0.273438),new Vertex(0.765625, 0.09375, -0.320313),new Vertex(0.84375, 0.171875, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.84375, 0.171875, -0.320313),new Vertex(-0.835938, 0.171875, -0.273438),new Vertex(-0.890625, 0.234375, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.835938, 0.171875, -0.273438),new Vertex(-0.890625, 0.242188, -0.265625),new Vertex(-0.890625, 0.234375, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.890625, 0.242188, -0.265625),new Vertex(0.835938, 0.171875, -0.273438),new Vertex(0.890625, 0.234375, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.835938, 0.171875, -0.273438),new Vertex(0.84375, 0.171875, -0.320313),new Vertex(0.890625, 0.234375, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.890625, 0.234375, -0.320313),new Vertex(-0.890625, 0.242188, -0.265625),new Vertex(-0.945313, 0.304688, -0.289063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.890625, 0.234375, -0.320313),new Vertex(-0.945313, 0.304688, -0.289063),new Vertex(-0.953125, 0.289063, -0.34375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.945313, 0.304688, -0.289063),new Vertex(0.890625, 0.242188, -0.265625),new Vertex(0.890625, 0.234375, -0.320313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.945313, 0.304688, -0.289063),new Vertex(0.890625, 0.234375, -0.320313),new Vertex(0.953125, 0.289063, -0.34375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.71875, 0.039063, -0.1875),new Vertex(-0.726563, 0.0, -0.070313),new Vertex(-0.796875, 0.203125, -0.210938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.726563, 0.0, -0.070313),new Vertex(-0.859375, 0.320313, -0.046875),new Vertex(-0.796875, 0.203125, -0.210938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.859375, 0.320313, -0.046875),new Vertex(0.726563, 0.0, -0.070313),new Vertex(0.796875, 0.203125, -0.210938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.726563, 0.0, -0.070313),new Vertex(0.71875, 0.039063, -0.1875),new Vertex(0.796875, 0.203125, -0.210938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.84375, 0.289063, -0.210938),new Vertex(-0.796875, 0.203125, -0.210938),new Vertex(-0.820313, 0.328125, -0.203125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.796875, 0.203125, -0.210938),new Vertex(-0.859375, 0.320313, -0.046875),new Vertex(-0.820313, 0.328125, -0.203125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.859375, 0.320313, -0.046875),new Vertex(0.796875, 0.203125, -0.210938),new Vertex(0.820313, 0.328125, -0.203125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.796875, 0.203125, -0.210938),new Vertex(0.84375, 0.289063, -0.210938),new Vertex(0.820313, 0.328125, -0.203125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.890625, 0.242188, -0.265625),new Vertex(-0.84375, 0.289063, -0.210938),new Vertex(-0.945313, 0.304688, -0.289063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.84375, 0.289063, -0.210938),new Vertex(-0.921875, 0.359375, -0.21875),new Vertex(-0.945313, 0.304688, -0.289063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.921875, 0.359375, -0.21875),new Vertex(0.84375, 0.289063, -0.210938),new Vertex(0.945313, 0.304688, -0.289063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.84375, 0.289063, -0.210938),new Vertex(0.890625, 0.242188, -0.265625),new Vertex(0.945313, 0.304688, -0.289063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.835938, 0.171875, -0.273438),new Vertex(-0.796875, 0.203125, -0.210938),new Vertex(-0.890625, 0.242188, -0.265625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.796875, 0.203125, -0.210938),new Vertex(-0.84375, 0.289063, -0.210938),new Vertex(-0.890625, 0.242188, -0.265625),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.84375, 0.289063, -0.210938),new Vertex(0.796875, 0.203125, -0.210938),new Vertex(0.890625, 0.242188, -0.265625),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.796875, 0.203125, -0.210938),new Vertex(0.835938, 0.171875, -0.273438),new Vertex(0.890625, 0.242188, -0.265625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.71875, 0.039063, -0.1875),new Vertex(-0.796875, 0.203125, -0.210938),new Vertex(-0.757813, 0.09375, -0.273438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.796875, 0.203125, -0.210938),new Vertex(-0.835938, 0.171875, -0.273438),new Vertex(-0.757813, 0.09375, -0.273438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.835938, 0.171875, -0.273438),new Vertex(0.796875, 0.203125, -0.210938),new Vertex(0.757813, 0.09375, -0.273438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.796875, 0.203125, -0.210938),new Vertex(0.71875, 0.039063, -0.1875),new Vertex(0.757813, 0.09375, -0.273438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.84375, 0.015625, -0.273438),new Vertex(-0.71875, 0.039063, -0.1875),new Vertex(-0.757813, 0.09375, -0.273438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.84375, 0.015625, -0.273438),new Vertex(-0.757813, 0.09375, -0.273438),new Vertex(-0.820313, 0.085938, -0.273438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.757813, 0.09375, -0.273438),new Vertex(0.71875, 0.039063, -0.1875),new Vertex(0.84375, 0.015625, -0.273438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.757813, 0.09375, -0.273438),new Vertex(0.84375, 0.015625, -0.273438),new Vertex(0.820313, 0.085938, -0.273438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.71875, -0.023438, -0.171875),new Vertex(-0.71875, 0.039063, -0.1875),new Vertex(-0.8125, -0.015625, -0.273438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.71875, 0.039063, -0.1875),new Vertex(-0.84375, 0.015625, -0.273438),new Vertex(-0.8125, -0.015625, -0.273438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.84375, 0.015625, -0.273438),new Vertex(0.71875, 0.039063, -0.1875),new Vertex(0.8125, -0.015625, -0.273438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.71875, 0.039063, -0.1875),new Vertex(0.71875, -0.023438, -0.171875),new Vertex(0.8125, -0.015625, -0.273438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.8125, -0.015625, -0.273438),new Vertex(-0.882813, -0.023438, -0.210938),new Vertex(-0.828125, -0.070313, -0.132813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.8125, -0.015625, -0.273438),new Vertex(-0.828125, -0.070313, -0.132813),new Vertex(-0.71875, -0.023438, -0.171875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.828125, -0.070313, -0.132813),new Vertex(0.882813, -0.023438, -0.210938),new Vertex(0.8125, -0.015625, -0.273438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.828125, -0.070313, -0.132813),new Vertex(0.8125, -0.015625, -0.273438),new Vertex(0.71875, -0.023438, -0.171875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.921875, 0.359375, -0.21875),new Vertex(-0.84375, 0.289063, -0.210938),new Vertex(-0.820313, 0.328125, -0.203125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.921875, 0.359375, -0.21875),new Vertex(-0.820313, 0.328125, -0.203125),new Vertex(-0.890625, 0.40625, -0.234375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.820313, 0.328125, -0.203125),new Vertex(0.84375, 0.289063, -0.210938),new Vertex(0.921875, 0.359375, -0.21875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.820313, 0.328125, -0.203125),new Vertex(0.921875, 0.359375, -0.21875),new Vertex(0.890625, 0.40625, -0.234375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.726563, 0.0, -0.070313),new Vertex(-0.734375, -0.046875, 0.070313),new Vertex(-0.851563, 0.234375, 0.054688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.726563, 0.0, -0.070313),new Vertex(-0.851563, 0.234375, 0.054688),new Vertex(-0.859375, 0.320313, -0.046875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.851563, 0.234375, 0.054688),new Vertex(0.734375, -0.046875, 0.070313),new Vertex(0.726563, 0.0, -0.070313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.851563, 0.234375, 0.054688),new Vertex(0.726563, 0.0, -0.070313),new Vertex(0.859375, 0.320313, -0.046875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.828125, -0.070313, -0.132813),new Vertex(-0.773438, -0.140625, -0.125),new Vertex(-0.71875, -0.023438, -0.171875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.773438, -0.140625, -0.125),new Vertex(-0.59375, -0.125, -0.164063),new Vertex(-0.71875, -0.023438, -0.171875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.59375, -0.125, -0.164063),new Vertex(0.773438, -0.140625, -0.125),new Vertex(0.71875, -0.023438, -0.171875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.773438, -0.140625, -0.125),new Vertex(0.828125, -0.070313, -0.132813),new Vertex(0.71875, -0.023438, -0.171875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.71875, -0.023438, -0.171875),new Vertex(-0.59375, -0.125, -0.164063),new Vertex(-0.726563, 0.0, -0.070313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.59375, -0.125, -0.164063),new Vertex(-0.734375, -0.046875, 0.070313),new Vertex(-0.726563, 0.0, -0.070313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.734375, -0.046875, 0.070313),new Vertex(0.59375, -0.125, -0.164063),new Vertex(0.726563, 0.0, -0.070313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.59375, -0.125, -0.164063),new Vertex(0.71875, -0.023438, -0.171875),new Vertex(0.726563, 0.0, -0.070313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.945313, 0.304688, -0.289063),new Vertex(-0.921875, 0.359375, -0.21875),new Vertex(-1.015625, 0.414063, -0.289063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.945313, 0.304688, -0.289063),new Vertex(-1.015625, 0.414063, -0.289063),new Vertex(-1.023438, 0.34375, -0.359375),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.015625, 0.414063, -0.289063),new Vertex(0.921875, 0.359375, -0.21875),new Vertex(0.945313, 0.304688, -0.289063),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.015625, 0.414063, -0.289063),new Vertex(0.945313, 0.304688, -0.289063),new Vertex(1.023438, 0.34375, -0.359375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.171875, 0.359375, -0.4375),new Vertex(-1.023438, 0.34375, -0.359375),new Vertex(-1.1875, 0.4375, -0.390625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.023438, 0.34375, -0.359375),new Vertex(-1.015625, 0.414063, -0.289063),new Vertex(-1.1875, 0.4375, -0.390625),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.015625, 0.414063, -0.289063),new Vertex(1.023438, 0.34375, -0.359375),new Vertex(1.1875, 0.4375, -0.390625),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.023438, 0.34375, -0.359375),new Vertex(1.171875, 0.359375, -0.4375),new Vertex(1.1875, 0.4375, -0.390625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.234375, 0.25, -0.445313),new Vertex(-1.171875, 0.359375, -0.4375),new Vertex(-1.265625, 0.289063, -0.40625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.171875, 0.359375, -0.4375),new Vertex(-1.1875, 0.4375, -0.390625),new Vertex(-1.265625, 0.289063, -0.40625),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.1875, 0.4375, -0.390625),new Vertex(1.171875, 0.359375, -0.4375),new Vertex(1.265625, 0.289063, -0.40625),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.171875, 0.359375, -0.4375),new Vertex(1.234375, 0.25, -0.445313),new Vertex(1.265625, 0.289063, -0.40625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.1875, 0.09375, -0.445313),new Vertex(-1.234375, 0.25, -0.445313),new Vertex(-1.210938, 0.078125, -0.40625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.234375, 0.25, -0.445313),new Vertex(-1.265625, 0.289063, -0.40625),new Vertex(-1.210938, 0.078125, -0.40625),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.265625, 0.289063, -0.40625),new Vertex(1.234375, 0.25, -0.445313),new Vertex(1.210938, 0.078125, -0.40625),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.234375, 0.25, -0.445313),new Vertex(1.1875, 0.09375, -0.445313),new Vertex(1.210938, 0.078125, -0.40625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.039063, 0.0, -0.367188),new Vertex(-1.1875, 0.09375, -0.445313),new Vertex(-1.210938, 0.078125, -0.40625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.039063, 0.0, -0.367188),new Vertex(-1.210938, 0.078125, -0.40625),new Vertex(-1.03125, -0.039063, -0.304688),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.210938, 0.078125, -0.40625),new Vertex(1.1875, 0.09375, -0.445313),new Vertex(1.039063, 0.0, -0.367188),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.210938, 0.078125, -0.40625),new Vertex(1.039063, 0.0, -0.367188),new Vertex(1.03125, -0.039063, -0.304688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.882813, -0.023438, -0.210938),new Vertex(-1.039063, 0.0, -0.367188),new Vertex(-1.03125, -0.039063, -0.304688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.882813, -0.023438, -0.210938),new Vertex(-1.03125, -0.039063, -0.304688),new Vertex(-0.828125, -0.070313, -0.132813),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.03125, -0.039063, -0.304688),new Vertex(1.039063, 0.0, -0.367188),new Vertex(0.882813, -0.023438, -0.210938),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.03125, -0.039063, -0.304688),new Vertex(0.882813, -0.023438, -0.210938),new Vertex(0.828125, -0.070313, -0.132813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.828125, -0.070313, -0.132813),new Vertex(-1.03125, -0.039063, -0.304688),new Vertex(-1.039063, -0.101563, -0.328125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.828125, -0.070313, -0.132813),new Vertex(-1.039063, -0.101563, -0.328125),new Vertex(-0.773438, -0.140625, -0.125),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.039063, -0.101563, -0.328125),new Vertex(1.03125, -0.039063, -0.304688),new Vertex(0.828125, -0.070313, -0.132813),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.039063, -0.101563, -0.328125),new Vertex(0.828125, -0.070313, -0.132813),new Vertex(0.773438, -0.140625, -0.125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.03125, -0.039063, -0.304688),new Vertex(-1.210938, 0.078125, -0.40625),new Vertex(-1.039063, -0.101563, -0.328125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.210938, 0.078125, -0.40625),new Vertex(-1.28125, 0.054688, -0.429688),new Vertex(-1.039063, -0.101563, -0.328125),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.28125, 0.054688, -0.429688),new Vertex(1.210938, 0.078125, -0.40625),new Vertex(1.039063, -0.101563, -0.328125),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.210938, 0.078125, -0.40625),new Vertex(1.03125, -0.039063, -0.304688),new Vertex(1.039063, -0.101563, -0.328125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.210938, 0.078125, -0.40625),new Vertex(-1.265625, 0.289063, -0.40625),new Vertex(-1.28125, 0.054688, -0.429688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.265625, 0.289063, -0.40625),new Vertex(-1.351563, 0.320313, -0.421875),new Vertex(-1.28125, 0.054688, -0.429688),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.351563, 0.320313, -0.421875),new Vertex(1.265625, 0.289063, -0.40625),new Vertex(1.28125, 0.054688, -0.429688),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.265625, 0.289063, -0.40625),new Vertex(1.210938, 0.078125, -0.40625),new Vertex(1.28125, 0.054688, -0.429688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.265625, 0.289063, -0.40625),new Vertex(-1.1875, 0.4375, -0.390625),new Vertex(-1.351563, 0.320313, -0.421875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.1875, 0.4375, -0.390625),new Vertex(-1.234375, 0.507813, -0.421875),new Vertex(-1.351563, 0.320313, -0.421875),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.234375, 0.507813, -0.421875),new Vertex(1.1875, 0.4375, -0.390625),new Vertex(1.351563, 0.320313, -0.421875),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.1875, 0.4375, -0.390625),new Vertex(1.265625, 0.289063, -0.40625),new Vertex(1.351563, 0.320313, -0.421875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.1875, 0.4375, -0.390625),new Vertex(-1.015625, 0.414063, -0.289063),new Vertex(-1.023438, 0.476563, -0.3125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-1.1875, 0.4375, -0.390625),new Vertex(-1.023438, 0.476563, -0.3125),new Vertex(-1.234375, 0.507813, -0.421875),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.023438, 0.476563, -0.3125),new Vertex(1.015625, 0.414063, -0.289063),new Vertex(1.1875, 0.4375, -0.390625),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.023438, 0.476563, -0.3125),new Vertex(1.1875, 0.4375, -0.390625),new Vertex(1.234375, 0.507813, -0.421875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.921875, 0.359375, -0.21875),new Vertex(-0.890625, 0.40625, -0.234375),new Vertex(-1.015625, 0.414063, -0.289063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.890625, 0.40625, -0.234375),new Vertex(-1.023438, 0.476563, -0.3125),new Vertex(-1.015625, 0.414063, -0.289063),Color.WHITE));
                tris.add(new Triangle(new Vertex(1.023438, 0.476563, -0.3125),new Vertex(0.890625, 0.40625, -0.234375),new Vertex(1.015625, 0.414063, -0.289063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.890625, 0.40625, -0.234375),new Vertex(0.921875, 0.359375, -0.21875),new Vertex(1.015625, 0.414063, -0.289063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.484375, 0.023438, -0.546875),new Vertex(-0.34375, -0.148438, -0.539063),new Vertex(-0.429688, -0.195313, -0.210938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.34375, -0.148438, -0.539063),new Vertex(-0.296875, -0.3125, -0.265625),new Vertex(-0.429688, -0.195313, -0.210938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.296875, -0.3125, -0.265625),new Vertex(0.34375, -0.148438, -0.539063),new Vertex(0.429688, -0.195313, -0.210938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.34375, -0.148438, -0.539063),new Vertex(0.484375, 0.023438, -0.546875),new Vertex(0.429688, -0.195313, -0.210938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.484375, 0.023438, -0.546875),new Vertex(-0.429688, -0.195313, -0.210938),new Vertex(-0.640625, -0.007813, -0.429688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.429688, -0.195313, -0.210938),new Vertex(-0.59375, -0.125, -0.164063),new Vertex(-0.640625, -0.007813, -0.429688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.59375, -0.125, -0.164063),new Vertex(0.429688, -0.195313, -0.210938),new Vertex(0.640625, -0.007813, -0.429688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.429688, -0.195313, -0.210938),new Vertex(0.484375, 0.023438, -0.546875),new Vertex(0.640625, -0.007813, -0.429688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.484375, 0.023438, -0.546875),new Vertex(-0.617188, 0.328125, -0.585938),new Vertex(-0.335938, 0.054688, -0.664063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.617188, 0.328125, -0.585938),new Vertex(-0.460938, 0.4375, -0.703125),new Vertex(-0.335938, 0.054688, -0.664063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.460938, 0.4375, -0.703125),new Vertex(0.617188, 0.328125, -0.585938),new Vertex(0.335938, 0.054688, -0.664063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.617188, 0.328125, -0.585938),new Vertex(0.484375, 0.023438, -0.546875),new Vertex(0.335938, 0.054688, -0.664063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.484375, 0.023438, -0.546875),new Vertex(-0.640625, -0.007813, -0.429688),new Vertex(-0.617188, 0.328125, -0.585938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.640625, -0.007813, -0.429688),new Vertex(-0.773438, 0.265625, -0.4375),new Vertex(-0.617188, 0.328125, -0.585938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.773438, 0.265625, -0.4375),new Vertex(0.640625, -0.007813, -0.429688),new Vertex(0.617188, 0.328125, -0.585938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.640625, -0.007813, -0.429688),new Vertex(0.484375, 0.023438, -0.546875),new Vertex(0.617188, 0.328125, -0.585938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.21875, -0.28125, 0.429688),new Vertex(-0.210938, -0.226563, 0.46875),new Vertex(-0.4375, -0.09375, 0.46875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.21875, -0.28125, 0.429688),new Vertex(-0.4375, -0.09375, 0.46875),new Vertex(-0.40625, -0.171875, 0.148438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.4375, -0.09375, 0.46875),new Vertex(0.210938, -0.226563, 0.46875),new Vertex(0.21875, -0.28125, 0.429688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.4375, -0.09375, 0.46875),new Vertex(0.21875, -0.28125, 0.429688),new Vertex(0.40625, -0.171875, 0.148438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.40625, -0.171875, 0.148438),new Vertex(-0.4375, -0.09375, 0.46875),new Vertex(-0.601563, 0.0, 0.414063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.40625, -0.171875, 0.148438),new Vertex(-0.601563, 0.0, 0.414063),new Vertex(-0.734375, -0.046875, 0.070313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.601563, 0.0, 0.414063),new Vertex(0.4375, -0.09375, 0.46875),new Vertex(0.40625, -0.171875, 0.148438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.601563, 0.0, 0.414063),new Vertex(0.40625, -0.171875, 0.148438),new Vertex(0.734375, -0.046875, 0.070313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.429688, -0.195313, -0.210938),new Vertex(-0.40625, -0.171875, 0.148438),new Vertex(-0.59375, -0.125, -0.164063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.40625, -0.171875, 0.148438),new Vertex(-0.734375, -0.046875, 0.070313),new Vertex(-0.59375, -0.125, -0.164063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.734375, -0.046875, 0.070313),new Vertex(0.40625, -0.171875, 0.148438),new Vertex(0.59375, -0.125, -0.164063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.40625, -0.171875, 0.148438),new Vertex(0.429688, -0.195313, -0.210938),new Vertex(0.59375, -0.125, -0.164063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.429688, -0.195313, -0.210938),new Vertex(-0.296875, -0.3125, -0.265625),new Vertex(-0.40625, -0.171875, 0.148438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.296875, -0.3125, -0.265625),new Vertex(-0.210938, -0.390625, 0.164063),new Vertex(-0.40625, -0.171875, 0.148438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.210938, -0.390625, 0.164063),new Vertex(0.296875, -0.3125, -0.265625),new Vertex(0.40625, -0.171875, 0.148438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.296875, -0.3125, -0.265625),new Vertex(0.429688, -0.195313, -0.210938),new Vertex(0.40625, -0.171875, 0.148438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.796875, 0.617188, -0.117188),new Vertex(-0.796875, 0.539063, -0.359375),new Vertex(-0.820313, 0.328125, -0.203125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.796875, 0.539063, -0.359375),new Vertex(-0.773438, 0.265625, -0.4375),new Vertex(-0.820313, 0.328125, -0.203125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.773438, 0.265625, -0.4375),new Vertex(0.796875, 0.539063, -0.359375),new Vertex(0.820313, 0.328125, -0.203125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.796875, 0.539063, -0.359375),new Vertex(0.796875, 0.617188, -0.117188),new Vertex(0.820313, 0.328125, -0.203125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.796875, 0.617188, -0.117188),new Vertex(-0.820313, 0.328125, -0.203125),new Vertex(-0.859375, 0.320313, -0.046875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.796875, 0.617188, -0.117188),new Vertex(-0.859375, 0.320313, -0.046875),new Vertex(-0.796875, 0.5625, 0.125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.859375, 0.320313, -0.046875),new Vertex(0.820313, 0.328125, -0.203125),new Vertex(0.796875, 0.617188, -0.117188),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.859375, 0.320313, -0.046875),new Vertex(0.796875, 0.617188, -0.117188),new Vertex(0.796875, 0.5625, 0.125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.796875, 0.5625, 0.125),new Vertex(-0.859375, 0.320313, -0.046875),new Vertex(-0.851563, 0.234375, 0.054688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.796875, 0.5625, 0.125),new Vertex(-0.851563, 0.234375, 0.054688),new Vertex(-0.726563, 0.40625, 0.335938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.851563, 0.234375, 0.054688),new Vertex(0.859375, 0.320313, -0.046875),new Vertex(0.796875, 0.5625, 0.125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.851563, 0.234375, 0.054688),new Vertex(0.796875, 0.5625, 0.125),new Vertex(0.726563, 0.40625, 0.335938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.851563, 0.234375, 0.054688),new Vertex(-0.773438, 0.164063, 0.375),new Vertex(-0.726563, 0.40625, 0.335938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.773438, 0.164063, 0.375),new Vertex(-0.796875, 0.40625, 0.460938),new Vertex(-0.726563, 0.40625, 0.335938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.796875, 0.40625, 0.460938),new Vertex(0.773438, 0.164063, 0.375),new Vertex(0.726563, 0.40625, 0.335938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.773438, 0.164063, 0.375),new Vertex(0.851563, 0.234375, 0.054688),new Vertex(0.726563, 0.40625, 0.335938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.460938, 0.523438, 0.429688),new Vertex(-0.484375, 0.554688, 0.554688),new Vertex(-0.109375, 0.460938, 0.609375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.460938, 0.523438, 0.429688),new Vertex(-0.109375, 0.460938, 0.609375),new Vertex(0.0, 0.570313, 0.570313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.109375, 0.460938, 0.609375),new Vertex(0.484375, 0.554688, 0.554688),new Vertex(0.460938, 0.523438, 0.429688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.109375, 0.460938, 0.609375),new Vertex(0.460938, 0.523438, 0.429688),new Vertex(0.0, 0.570313, 0.570313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.335938, 0.6875, 0.59375),new Vertex(-0.195313, 0.664063, 0.617188),new Vertex(-0.484375, 0.554688, 0.554688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.195313, 0.664063, 0.617188),new Vertex(-0.109375, 0.460938, 0.609375),new Vertex(-0.484375, 0.554688, 0.554688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.109375, 0.460938, 0.609375),new Vertex(0.195313, 0.664063, 0.617188),new Vertex(0.484375, 0.554688, 0.554688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.195313, 0.664063, 0.617188),new Vertex(0.335938, 0.6875, 0.59375),new Vertex(0.484375, 0.554688, 0.554688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.453125, 0.851563, 0.234375),new Vertex(-0.460938, 0.523438, 0.429688),new Vertex(0.0, 0.898438, 0.289063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.460938, 0.523438, 0.429688),new Vertex(0.0, 0.570313, 0.570313),new Vertex(0.0, 0.898438, 0.289063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, 0.570313, 0.570313),new Vertex(0.460938, 0.523438, 0.429688),new Vertex(0.0, 0.898438, 0.289063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.460938, 0.523438, 0.429688),new Vertex(0.453125, 0.851563, 0.234375),new Vertex(0.0, 0.898438, 0.289063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.632813, 0.453125, 0.28125),new Vertex(-0.679688, 0.453125, 0.492188),new Vertex(-0.460938, 0.523438, 0.429688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.679688, 0.453125, 0.492188),new Vertex(-0.484375, 0.554688, 0.554688),new Vertex(-0.460938, 0.523438, 0.429688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.484375, 0.554688, 0.554688),new Vertex(0.679688, 0.453125, 0.492188),new Vertex(0.460938, 0.523438, 0.429688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.679688, 0.453125, 0.492188),new Vertex(0.632813, 0.453125, 0.28125),new Vertex(0.460938, 0.523438, 0.429688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.632813, 0.453125, 0.28125),new Vertex(-0.460938, 0.523438, 0.429688),new Vertex(-0.453125, 0.851563, 0.234375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.632813, 0.453125, 0.28125),new Vertex(-0.453125, 0.851563, 0.234375),new Vertex(-0.640625, 0.703125, 0.054688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.453125, 0.851563, 0.234375),new Vertex(0.460938, 0.523438, 0.429688),new Vertex(0.632813, 0.453125, 0.28125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.453125, 0.851563, 0.234375),new Vertex(0.632813, 0.453125, 0.28125),new Vertex(0.640625, 0.703125, 0.054688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.640625, 0.703125, 0.054688),new Vertex(-0.453125, 0.851563, 0.234375),new Vertex(-0.453125, 0.929688, -0.070313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.640625, 0.703125, 0.054688),new Vertex(-0.453125, 0.929688, -0.070313),new Vertex(-0.640625, 0.75, -0.195313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.453125, 0.929688, -0.070313),new Vertex(0.453125, 0.851563, 0.234375),new Vertex(0.640625, 0.703125, 0.054688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.453125, 0.929688, -0.070313),new Vertex(0.640625, 0.703125, 0.054688),new Vertex(0.640625, 0.75, -0.195313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.640625, 0.75, -0.195313),new Vertex(-0.453125, 0.929688, -0.070313),new Vertex(-0.453125, 0.867188, -0.382813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.640625, 0.75, -0.195313),new Vertex(-0.453125, 0.867188, -0.382813),new Vertex(-0.640625, 0.679688, -0.445313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.453125, 0.867188, -0.382813),new Vertex(0.453125, 0.929688, -0.070313),new Vertex(0.640625, 0.75, -0.195313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.453125, 0.867188, -0.382813),new Vertex(0.640625, 0.75, -0.195313),new Vertex(0.640625, 0.679688, -0.445313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.640625, 0.679688, -0.445313),new Vertex(-0.453125, 0.867188, -0.382813),new Vertex(-0.460938, 0.4375, -0.703125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.640625, 0.679688, -0.445313),new Vertex(-0.460938, 0.4375, -0.703125),new Vertex(-0.617188, 0.328125, -0.585938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.460938, 0.4375, -0.703125),new Vertex(0.453125, 0.867188, -0.382813),new Vertex(0.640625, 0.679688, -0.445313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.460938, 0.4375, -0.703125),new Vertex(0.640625, 0.679688, -0.445313),new Vertex(0.617188, 0.328125, -0.585938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.640625, 0.679688, -0.445313),new Vertex(-0.617188, 0.328125, -0.585938),new Vertex(-0.796875, 0.539063, -0.359375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.617188, 0.328125, -0.585938),new Vertex(-0.773438, 0.265625, -0.4375),new Vertex(-0.796875, 0.539063, -0.359375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.773438, 0.265625, -0.4375),new Vertex(0.617188, 0.328125, -0.585938),new Vertex(0.796875, 0.539063, -0.359375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.617188, 0.328125, -0.585938),new Vertex(0.640625, 0.679688, -0.445313),new Vertex(0.796875, 0.539063, -0.359375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.796875, 0.539063, -0.359375),new Vertex(-0.796875, 0.617188, -0.117188),new Vertex(-0.640625, 0.75, -0.195313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.796875, 0.539063, -0.359375),new Vertex(-0.640625, 0.75, -0.195313),new Vertex(-0.640625, 0.679688, -0.445313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.640625, 0.75, -0.195313),new Vertex(0.796875, 0.617188, -0.117188),new Vertex(0.796875, 0.539063, -0.359375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.640625, 0.75, -0.195313),new Vertex(0.796875, 0.539063, -0.359375),new Vertex(0.640625, 0.679688, -0.445313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.796875, 0.617188, -0.117188),new Vertex(-0.796875, 0.5625, 0.125),new Vertex(-0.640625, 0.703125, 0.054688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.796875, 0.617188, -0.117188),new Vertex(-0.640625, 0.703125, 0.054688),new Vertex(-0.640625, 0.75, -0.195313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.640625, 0.703125, 0.054688),new Vertex(0.796875, 0.5625, 0.125),new Vertex(0.796875, 0.617188, -0.117188),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.640625, 0.703125, 0.054688),new Vertex(0.796875, 0.617188, -0.117188),new Vertex(0.640625, 0.75, -0.195313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.796875, 0.5625, 0.125),new Vertex(-0.726563, 0.40625, 0.335938),new Vertex(-0.632813, 0.453125, 0.28125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.796875, 0.5625, 0.125),new Vertex(-0.632813, 0.453125, 0.28125),new Vertex(-0.640625, 0.703125, 0.054688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.632813, 0.453125, 0.28125),new Vertex(0.726563, 0.40625, 0.335938),new Vertex(0.796875, 0.5625, 0.125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.632813, 0.453125, 0.28125),new Vertex(0.796875, 0.5625, 0.125),new Vertex(0.640625, 0.703125, 0.054688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.726563, 0.40625, 0.335938),new Vertex(-0.796875, 0.40625, 0.460938),new Vertex(-0.679688, 0.453125, 0.492188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.726563, 0.40625, 0.335938),new Vertex(-0.679688, 0.453125, 0.492188),new Vertex(-0.632813, 0.453125, 0.28125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.679688, 0.453125, 0.492188),new Vertex(0.796875, 0.40625, 0.460938),new Vertex(0.726563, 0.40625, 0.335938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.679688, 0.453125, 0.492188),new Vertex(0.726563, 0.40625, 0.335938),new Vertex(0.632813, 0.453125, 0.28125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.460938, 0.4375, -0.703125),new Vertex(-0.453125, 0.867188, -0.382813),new Vertex(0.0, 0.898438, -0.546875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.460938, 0.4375, -0.703125),new Vertex(0.0, 0.898438, -0.546875),new Vertex(0.0, 0.5625, -0.851563),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, 0.898438, -0.546875),new Vertex(0.453125, 0.867188, -0.382813),new Vertex(0.460938, 0.4375, -0.703125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, 0.898438, -0.546875),new Vertex(0.460938, 0.4375, -0.703125),new Vertex(0.0, 0.5625, -0.851563),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.453125, 0.867188, -0.382813),new Vertex(-0.453125, 0.929688, -0.070313),new Vertex(0.0, 0.984375, -0.078125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.453125, 0.867188, -0.382813),new Vertex(0.0, 0.984375, -0.078125),new Vertex(0.0, 0.898438, -0.546875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, 0.984375, -0.078125),new Vertex(0.453125, 0.929688, -0.070313),new Vertex(0.453125, 0.867188, -0.382813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, 0.984375, -0.078125),new Vertex(0.453125, 0.867188, -0.382813),new Vertex(0.0, 0.898438, -0.546875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.453125, 0.929688, -0.070313),new Vertex(-0.453125, 0.851563, 0.234375),new Vertex(0.0, 0.984375, -0.078125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.453125, 0.851563, 0.234375),new Vertex(0.0, 0.898438, 0.289063),new Vertex(0.0, 0.984375, -0.078125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, 0.898438, 0.289063),new Vertex(0.453125, 0.851563, 0.234375),new Vertex(0.0, 0.984375, -0.078125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.453125, 0.851563, 0.234375),new Vertex(0.453125, 0.929688, -0.070313),new Vertex(0.0, 0.984375, -0.078125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.335938, 0.054688, -0.664063),new Vertex(-0.460938, 0.4375, -0.703125),new Vertex(0.0, 0.070313, -0.828125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.460938, 0.4375, -0.703125),new Vertex(0.0, 0.5625, -0.851563),new Vertex(0.0, 0.070313, -0.828125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, 0.5625, -0.851563),new Vertex(0.460938, 0.4375, -0.703125),new Vertex(0.0, 0.070313, -0.828125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.460938, 0.4375, -0.703125),new Vertex(0.335938, 0.054688, -0.664063),new Vertex(0.0, 0.070313, -0.828125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.734375, -0.046875, 0.070313),new Vertex(-0.601563, 0.0, 0.414063),new Vertex(-0.773438, 0.164063, 0.375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.734375, -0.046875, 0.070313),new Vertex(-0.773438, 0.164063, 0.375),new Vertex(-0.851563, 0.234375, 0.054688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.773438, 0.164063, 0.375),new Vertex(0.601563, 0.0, 0.414063),new Vertex(0.734375, -0.046875, 0.070313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.773438, 0.164063, 0.375),new Vertex(0.734375, -0.046875, 0.070313),new Vertex(0.851563, 0.234375, 0.054688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.210938, -0.390625, 0.164063),new Vertex(-0.179688, -0.414063, 0.257813),new Vertex(-0.21875, -0.28125, 0.429688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.179688, -0.414063, 0.257813),new Vertex(-0.234375, -0.351563, 0.40625),new Vertex(-0.21875, -0.28125, 0.429688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.234375, -0.351563, 0.40625),new Vertex(0.179688, -0.414063, 0.257813),new Vertex(0.21875, -0.28125, 0.429688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.179688, -0.414063, 0.257813),new Vertex(0.210938, -0.390625, 0.164063),new Vertex(0.21875, -0.28125, 0.429688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.179688, -0.414063, 0.257813),new Vertex(-0.210938, -0.390625, 0.164063),new Vertex(0.0, -0.460938, 0.1875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.179688, -0.414063, 0.257813),new Vertex(0.0, -0.460938, 0.1875),new Vertex(0.0, -0.484375, 0.28125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.460938, 0.1875),new Vertex(0.210938, -0.390625, 0.164063),new Vertex(0.179688, -0.414063, 0.257813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.460938, 0.1875),new Vertex(0.179688, -0.414063, 0.257813),new Vertex(0.0, -0.484375, 0.28125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.210938, -0.390625, 0.164063),new Vertex(-0.296875, -0.3125, -0.265625),new Vertex(0.0, -0.382813, -0.351563),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.210938, -0.390625, 0.164063),new Vertex(0.0, -0.382813, -0.351563),new Vertex(0.0, -0.460938, 0.1875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.382813, -0.351563),new Vertex(0.296875, -0.3125, -0.265625),new Vertex(0.210938, -0.390625, 0.164063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.382813, -0.351563),new Vertex(0.210938, -0.390625, 0.164063),new Vertex(0.0, -0.460938, 0.1875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.296875, -0.3125, -0.265625),new Vertex(-0.34375, -0.148438, -0.539063),new Vertex(0.0, -0.382813, -0.351563),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.34375, -0.148438, -0.539063),new Vertex(0.0, -0.195313, -0.671875),new Vertex(0.0, -0.382813, -0.351563),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.195313, -0.671875),new Vertex(0.34375, -0.148438, -0.539063),new Vertex(0.0, -0.382813, -0.351563),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.34375, -0.148438, -0.539063),new Vertex(0.296875, -0.3125, -0.265625),new Vertex(0.0, -0.382813, -0.351563),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.34375, -0.148438, -0.539063),new Vertex(-0.335938, 0.054688, -0.664063),new Vertex(0.0, -0.195313, -0.671875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.335938, 0.054688, -0.664063),new Vertex(0.0, 0.070313, -0.828125),new Vertex(0.0, -0.195313, -0.671875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, 0.070313, -0.828125),new Vertex(0.335938, 0.054688, -0.664063),new Vertex(0.0, -0.195313, -0.671875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.335938, 0.054688, -0.664063),new Vertex(0.34375, -0.148438, -0.539063),new Vertex(0.0, -0.195313, -0.671875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.4375, -0.09375, 0.46875),new Vertex(-0.203125, -0.171875, 0.5),new Vertex(-0.4375, -0.140625, 0.53125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.203125, -0.171875, 0.5),new Vertex(-0.203125, -0.1875, 0.5625),new Vertex(-0.4375, -0.140625, 0.53125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.203125, -0.1875, 0.5625),new Vertex(0.203125, -0.171875, 0.5),new Vertex(0.4375, -0.140625, 0.53125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.203125, -0.171875, 0.5),new Vertex(0.4375, -0.09375, 0.46875),new Vertex(0.4375, -0.140625, 0.53125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.210938, -0.226563, 0.46875),new Vertex(-0.234375, -0.25, 0.554688),new Vertex(-0.203125, -0.171875, 0.5),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.234375, -0.25, 0.554688),new Vertex(-0.203125, -0.1875, 0.5625),new Vertex(-0.203125, -0.171875, 0.5),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.203125, -0.1875, 0.5625),new Vertex(0.234375, -0.25, 0.554688),new Vertex(0.203125, -0.171875, 0.5),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.234375, -0.25, 0.554688),new Vertex(0.210938, -0.226563, 0.46875),new Vertex(0.203125, -0.171875, 0.5),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.21875, -0.28125, 0.429688),new Vertex(-0.234375, -0.351563, 0.40625),new Vertex(-0.257813, -0.3125, 0.554688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.234375, -0.351563, 0.40625),new Vertex(-0.3125, -0.4375, 0.570313),new Vertex(-0.257813, -0.3125, 0.554688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.3125, -0.4375, 0.570313),new Vertex(0.234375, -0.351563, 0.40625),new Vertex(0.257813, -0.3125, 0.554688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.234375, -0.351563, 0.40625),new Vertex(0.21875, -0.28125, 0.429688),new Vertex(0.257813, -0.3125, 0.554688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.210938, -0.226563, 0.46875),new Vertex(-0.21875, -0.28125, 0.429688),new Vertex(-0.234375, -0.25, 0.554688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.21875, -0.28125, 0.429688),new Vertex(-0.257813, -0.3125, 0.554688),new Vertex(-0.234375, -0.25, 0.554688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.257813, -0.3125, 0.554688),new Vertex(0.21875, -0.28125, 0.429688),new Vertex(0.234375, -0.25, 0.554688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.21875, -0.28125, 0.429688),new Vertex(0.210938, -0.226563, 0.46875),new Vertex(0.234375, -0.25, 0.554688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.25, -0.5, 0.390625),new Vertex(-0.351563, -0.695313, 0.570313),new Vertex(-0.3125, -0.4375, 0.570313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.25, -0.5, 0.390625),new Vertex(-0.3125, -0.4375, 0.570313),new Vertex(-0.234375, -0.351563, 0.40625),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.3125, -0.4375, 0.570313),new Vertex(0.351563, -0.695313, 0.570313),new Vertex(0.25, -0.5, 0.390625),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.3125, -0.4375, 0.570313),new Vertex(0.25, -0.5, 0.390625),new Vertex(0.234375, -0.351563, 0.40625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.125, -0.539063, 0.359375),new Vertex(-0.25, -0.5, 0.390625),new Vertex(-0.179688, -0.414063, 0.257813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.25, -0.5, 0.390625),new Vertex(-0.234375, -0.351563, 0.40625),new Vertex(-0.179688, -0.414063, 0.257813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.234375, -0.351563, 0.40625),new Vertex(0.25, -0.5, 0.390625),new Vertex(0.179688, -0.414063, 0.257813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.25, -0.5, 0.390625),new Vertex(0.125, -0.539063, 0.359375),new Vertex(0.179688, -0.414063, 0.257813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.164063, -0.945313, 0.4375),new Vertex(-0.328125, -0.914063, 0.398438),new Vertex(-0.140625, -0.757813, 0.367188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.328125, -0.914063, 0.398438),new Vertex(-0.289063, -0.710938, 0.382813),new Vertex(-0.140625, -0.757813, 0.367188),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.289063, -0.710938, 0.382813),new Vertex(0.328125, -0.914063, 0.398438),new Vertex(0.140625, -0.757813, 0.367188),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.328125, -0.914063, 0.398438),new Vertex(0.164063, -0.945313, 0.4375),new Vertex(0.140625, -0.757813, 0.367188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.125, -0.539063, 0.359375),new Vertex(-0.140625, -0.757813, 0.367188),new Vertex(-0.289063, -0.710938, 0.382813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.125, -0.539063, 0.359375),new Vertex(-0.289063, -0.710938, 0.382813),new Vertex(-0.25, -0.5, 0.390625),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.289063, -0.710938, 0.382813),new Vertex(0.140625, -0.757813, 0.367188),new Vertex(0.125, -0.539063, 0.359375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.289063, -0.710938, 0.382813),new Vertex(0.125, -0.539063, 0.359375),new Vertex(0.25, -0.5, 0.390625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.289063, -0.710938, 0.382813),new Vertex(-0.367188, -0.890625, 0.53125),new Vertex(-0.351563, -0.695313, 0.570313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.289063, -0.710938, 0.382813),new Vertex(-0.351563, -0.695313, 0.570313),new Vertex(-0.25, -0.5, 0.390625),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.351563, -0.695313, 0.570313),new Vertex(0.367188, -0.890625, 0.53125),new Vertex(0.289063, -0.710938, 0.382813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.351563, -0.695313, 0.570313),new Vertex(0.289063, -0.710938, 0.382813),new Vertex(0.25, -0.5, 0.390625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.328125, -0.914063, 0.398438),new Vertex(-0.328125, -0.945313, 0.523438),new Vertex(-0.367188, -0.890625, 0.53125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.328125, -0.914063, 0.398438),new Vertex(-0.367188, -0.890625, 0.53125),new Vertex(-0.289063, -0.710938, 0.382813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.367188, -0.890625, 0.53125),new Vertex(0.328125, -0.945313, 0.523438),new Vertex(0.328125, -0.914063, 0.398438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.367188, -0.890625, 0.53125),new Vertex(0.328125, -0.914063, 0.398438),new Vertex(0.289063, -0.710938, 0.382813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.164063, -0.945313, 0.4375),new Vertex(-0.179688, -0.96875, 0.554688),new Vertex(-0.328125, -0.945313, 0.523438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.164063, -0.945313, 0.4375),new Vertex(-0.328125, -0.945313, 0.523438),new Vertex(-0.328125, -0.914063, 0.398438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.328125, -0.945313, 0.523438),new Vertex(0.179688, -0.96875, 0.554688),new Vertex(0.164063, -0.945313, 0.4375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.328125, -0.945313, 0.523438),new Vertex(0.164063, -0.945313, 0.4375),new Vertex(0.328125, -0.914063, 0.398438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.976563, 0.460938),new Vertex(0.0, -0.984375, 0.578125),new Vertex(-0.179688, -0.96875, 0.554688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.976563, 0.460938),new Vertex(-0.179688, -0.96875, 0.554688),new Vertex(-0.164063, -0.945313, 0.4375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.179688, -0.96875, 0.554688),new Vertex(0.0, -0.984375, 0.578125),new Vertex(0.0, -0.976563, 0.460938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.179688, -0.96875, 0.554688),new Vertex(0.0, -0.976563, 0.460938),new Vertex(0.164063, -0.945313, 0.4375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.140625, -0.757813, 0.367188),new Vertex(0.0, -0.804688, 0.34375),new Vertex(-0.164063, -0.945313, 0.4375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.804688, 0.34375),new Vertex(0.0, -0.976563, 0.460938),new Vertex(-0.164063, -0.945313, 0.4375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.976563, 0.460938),new Vertex(0.0, -0.804688, 0.34375),new Vertex(0.164063, -0.945313, 0.4375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.804688, 0.34375),new Vertex(0.140625, -0.757813, 0.367188),new Vertex(0.164063, -0.945313, 0.4375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.125, -0.539063, 0.359375),new Vertex(0.0, -0.570313, 0.320313),new Vertex(-0.140625, -0.757813, 0.367188),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.570313, 0.320313),new Vertex(0.0, -0.804688, 0.34375),new Vertex(-0.140625, -0.757813, 0.367188),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.804688, 0.34375),new Vertex(0.0, -0.570313, 0.320313),new Vertex(0.140625, -0.757813, 0.367188),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.570313, 0.320313),new Vertex(0.125, -0.539063, 0.359375),new Vertex(0.140625, -0.757813, 0.367188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.179688, -0.414063, 0.257813),new Vertex(0.0, -0.484375, 0.28125),new Vertex(-0.125, -0.539063, 0.359375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.484375, 0.28125),new Vertex(0.0, -0.570313, 0.320313),new Vertex(-0.125, -0.539063, 0.359375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.570313, 0.320313),new Vertex(0.0, -0.484375, 0.28125),new Vertex(0.125, -0.539063, 0.359375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.484375, 0.28125),new Vertex(0.179688, -0.414063, 0.257813),new Vertex(0.125, -0.539063, 0.359375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.4375, -0.09375, 0.46875),new Vertex(-0.4375, -0.140625, 0.53125),new Vertex(-0.632813, -0.039063, 0.539063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.4375, -0.09375, 0.46875),new Vertex(-0.632813, -0.039063, 0.539063),new Vertex(-0.601563, 0.0, 0.414063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.632813, -0.039063, 0.539063),new Vertex(0.4375, -0.140625, 0.53125),new Vertex(0.4375, -0.09375, 0.46875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.632813, -0.039063, 0.539063),new Vertex(0.4375, -0.09375, 0.46875),new Vertex(0.601563, 0.0, 0.414063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.601563, 0.0, 0.414063),new Vertex(-0.632813, -0.039063, 0.539063),new Vertex(-0.828125, 0.148438, 0.445313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.601563, 0.0, 0.414063),new Vertex(-0.828125, 0.148438, 0.445313),new Vertex(-0.773438, 0.164063, 0.375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.828125, 0.148438, 0.445313),new Vertex(0.632813, -0.039063, 0.539063),new Vertex(0.601563, 0.0, 0.414063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.828125, 0.148438, 0.445313),new Vertex(0.601563, 0.0, 0.414063),new Vertex(0.773438, 0.164063, 0.375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.773438, 0.164063, 0.375),new Vertex(-0.828125, 0.148438, 0.445313),new Vertex(-0.796875, 0.40625, 0.460938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.828125, 0.148438, 0.445313),new Vertex(-0.859375, 0.429688, 0.59375),new Vertex(-0.796875, 0.40625, 0.460938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.859375, 0.429688, 0.59375),new Vertex(0.828125, 0.148438, 0.445313),new Vertex(0.796875, 0.40625, 0.460938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.828125, 0.148438, 0.445313),new Vertex(0.773438, 0.164063, 0.375),new Vertex(0.796875, 0.40625, 0.460938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.796875, 0.40625, 0.460938),new Vertex(-0.859375, 0.429688, 0.59375),new Vertex(-0.710938, 0.484375, 0.625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.796875, 0.40625, 0.460938),new Vertex(-0.710938, 0.484375, 0.625),new Vertex(-0.679688, 0.453125, 0.492188),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.710938, 0.484375, 0.625),new Vertex(0.859375, 0.429688, 0.59375),new Vertex(0.796875, 0.40625, 0.460938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.710938, 0.484375, 0.625),new Vertex(0.796875, 0.40625, 0.460938),new Vertex(0.679688, 0.453125, 0.492188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.679688, 0.453125, 0.492188),new Vertex(-0.710938, 0.484375, 0.625),new Vertex(-0.484375, 0.554688, 0.554688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.710938, 0.484375, 0.625),new Vertex(-0.492188, 0.601563, 0.6875),new Vertex(-0.484375, 0.554688, 0.554688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.492188, 0.601563, 0.6875),new Vertex(0.710938, 0.484375, 0.625),new Vertex(0.484375, 0.554688, 0.554688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.710938, 0.484375, 0.625),new Vertex(0.679688, 0.453125, 0.492188),new Vertex(0.484375, 0.554688, 0.554688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.484375, 0.554688, 0.554688),new Vertex(-0.492188, 0.601563, 0.6875),new Vertex(-0.335938, 0.6875, 0.59375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.492188, 0.601563, 0.6875),new Vertex(-0.320313, 0.757813, 0.734375),new Vertex(-0.335938, 0.6875, 0.59375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.320313, 0.757813, 0.734375),new Vertex(0.492188, 0.601563, 0.6875),new Vertex(0.335938, 0.6875, 0.59375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.492188, 0.601563, 0.6875),new Vertex(0.484375, 0.554688, 0.554688),new Vertex(0.335938, 0.6875, 0.59375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.335938, 0.6875, 0.59375),new Vertex(-0.320313, 0.757813, 0.734375),new Vertex(-0.195313, 0.664063, 0.617188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.320313, 0.757813, 0.734375),new Vertex(-0.15625, 0.71875, 0.757813),new Vertex(-0.195313, 0.664063, 0.617188),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.15625, 0.71875, 0.757813),new Vertex(0.320313, 0.757813, 0.734375),new Vertex(0.195313, 0.664063, 0.617188),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.320313, 0.757813, 0.734375),new Vertex(0.335938, 0.6875, 0.59375),new Vertex(0.195313, 0.664063, 0.617188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.195313, 0.664063, 0.617188),new Vertex(-0.15625, 0.71875, 0.757813),new Vertex(-0.0625, 0.492188, 0.75),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.195313, 0.664063, 0.617188),new Vertex(-0.0625, 0.492188, 0.75),new Vertex(-0.109375, 0.460938, 0.609375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0625, 0.492188, 0.75),new Vertex(0.15625, 0.71875, 0.757813),new Vertex(0.195313, 0.664063, 0.617188),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0625, 0.492188, 0.75),new Vertex(0.195313, 0.664063, 0.617188),new Vertex(0.109375, 0.460938, 0.609375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.109375, 0.460938, 0.609375),new Vertex(-0.0625, 0.492188, 0.75),new Vertex(0.0, 0.429688, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.109375, 0.460938, 0.609375),new Vertex(0.0, 0.429688, 0.742188),new Vertex(0.0, 0.40625, 0.601563),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, 0.429688, 0.742188),new Vertex(0.0625, 0.492188, 0.75),new Vertex(0.109375, 0.460938, 0.609375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, 0.429688, 0.742188),new Vertex(0.109375, 0.460938, 0.609375),new Vertex(0.0, 0.40625, 0.601563),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.203125, 0.171875, 0.75),new Vertex(-0.1875, 0.15625, 0.773438),new Vertex(-0.171875, 0.21875, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.203125, 0.171875, 0.75),new Vertex(-0.171875, 0.21875, 0.78125),new Vertex(-0.195313, 0.226563, 0.75),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.171875, 0.21875, 0.78125),new Vertex(0.1875, 0.15625, 0.773438),new Vertex(0.203125, 0.171875, 0.75),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.171875, 0.21875, 0.78125),new Vertex(0.203125, 0.171875, 0.75),new Vertex(0.195313, 0.226563, 0.75),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.195313, 0.226563, 0.75),new Vertex(-0.171875, 0.21875, 0.78125),new Vertex(-0.179688, 0.296875, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.195313, 0.226563, 0.75),new Vertex(-0.179688, 0.296875, 0.78125),new Vertex(-0.195313, 0.296875, 0.757813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.179688, 0.296875, 0.78125),new Vertex(0.171875, 0.21875, 0.78125),new Vertex(0.195313, 0.226563, 0.75),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.179688, 0.296875, 0.78125),new Vertex(0.195313, 0.226563, 0.75),new Vertex(0.195313, 0.296875, 0.757813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.195313, 0.296875, 0.757813),new Vertex(-0.179688, 0.296875, 0.78125),new Vertex(-0.210938, 0.375, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.195313, 0.296875, 0.757813),new Vertex(-0.210938, 0.375, 0.78125),new Vertex(-0.234375, 0.359375, 0.757813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.210938, 0.375, 0.78125),new Vertex(0.179688, 0.296875, 0.78125),new Vertex(0.195313, 0.296875, 0.757813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.210938, 0.375, 0.78125),new Vertex(0.195313, 0.296875, 0.757813),new Vertex(0.234375, 0.359375, 0.757813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.242188, 0.125, 0.757813),new Vertex(-0.226563, 0.109375, 0.78125),new Vertex(-0.1875, 0.15625, 0.773438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.242188, 0.125, 0.757813),new Vertex(-0.1875, 0.15625, 0.773438),new Vertex(-0.203125, 0.171875, 0.75),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.1875, 0.15625, 0.773438),new Vertex(0.226563, 0.109375, 0.78125),new Vertex(0.242188, 0.125, 0.757813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.1875, 0.15625, 0.773438),new Vertex(0.242188, 0.125, 0.757813),new Vertex(0.203125, 0.171875, 0.75),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.375, 0.085938, 0.726563),new Vertex(-0.375, 0.0625, 0.742188),new Vertex(-0.242188, 0.125, 0.757813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.375, 0.0625, 0.742188),new Vertex(-0.226563, 0.109375, 0.78125),new Vertex(-0.242188, 0.125, 0.757813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.226563, 0.109375, 0.78125),new Vertex(0.375, 0.0625, 0.742188),new Vertex(0.242188, 0.125, 0.757813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.375, 0.0625, 0.742188),new Vertex(0.375, 0.085938, 0.726563),new Vertex(0.242188, 0.125, 0.757813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.460938, 0.117188, 0.703125),new Vertex(-0.476563, 0.101563, 0.71875),new Vertex(-0.375, 0.085938, 0.726563),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.476563, 0.101563, 0.71875),new Vertex(-0.375, 0.0625, 0.742188),new Vertex(-0.375, 0.085938, 0.726563),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.375, 0.0625, 0.742188),new Vertex(0.476563, 0.101563, 0.71875),new Vertex(0.375, 0.085938, 0.726563),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.476563, 0.101563, 0.71875),new Vertex(0.460938, 0.117188, 0.703125),new Vertex(0.375, 0.085938, 0.726563),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.546875, 0.210938, 0.671875),new Vertex(-0.578125, 0.195313, 0.679688),new Vertex(-0.476563, 0.101563, 0.71875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.546875, 0.210938, 0.671875),new Vertex(-0.476563, 0.101563, 0.71875),new Vertex(-0.460938, 0.117188, 0.703125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.476563, 0.101563, 0.71875),new Vertex(0.578125, 0.195313, 0.679688),new Vertex(0.546875, 0.210938, 0.671875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.476563, 0.101563, 0.71875),new Vertex(0.546875, 0.210938, 0.671875),new Vertex(0.460938, 0.117188, 0.703125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.554688, 0.28125, 0.671875),new Vertex(-0.585938, 0.289063, 0.6875),new Vertex(-0.546875, 0.210938, 0.671875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.585938, 0.289063, 0.6875),new Vertex(-0.578125, 0.195313, 0.679688),new Vertex(-0.546875, 0.210938, 0.671875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.578125, 0.195313, 0.679688),new Vertex(0.585938, 0.289063, 0.6875),new Vertex(0.546875, 0.210938, 0.671875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.585938, 0.289063, 0.6875),new Vertex(0.554688, 0.28125, 0.671875),new Vertex(0.546875, 0.210938, 0.671875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.53125, 0.335938, 0.679688),new Vertex(-0.5625, 0.351563, 0.695313),new Vertex(-0.585938, 0.289063, 0.6875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.53125, 0.335938, 0.679688),new Vertex(-0.585938, 0.289063, 0.6875),new Vertex(-0.554688, 0.28125, 0.671875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.585938, 0.289063, 0.6875),new Vertex(0.5625, 0.351563, 0.695313),new Vertex(0.53125, 0.335938, 0.679688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.585938, 0.289063, 0.6875),new Vertex(0.53125, 0.335938, 0.679688),new Vertex(0.554688, 0.28125, 0.671875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.414063, 0.390625, 0.75),new Vertex(-0.421875, 0.398438, 0.773438),new Vertex(-0.53125, 0.335938, 0.679688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.421875, 0.398438, 0.773438),new Vertex(-0.5625, 0.351563, 0.695313),new Vertex(-0.53125, 0.335938, 0.679688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.5625, 0.351563, 0.695313),new Vertex(0.421875, 0.398438, 0.773438),new Vertex(0.53125, 0.335938, 0.679688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.421875, 0.398438, 0.773438),new Vertex(0.414063, 0.390625, 0.75),new Vertex(0.53125, 0.335938, 0.679688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.335938, 0.40625, 0.75),new Vertex(-0.335938, 0.429688, 0.757813),new Vertex(-0.414063, 0.390625, 0.75),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.335938, 0.429688, 0.757813),new Vertex(-0.421875, 0.398438, 0.773438),new Vertex(-0.414063, 0.390625, 0.75),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.421875, 0.398438, 0.773438),new Vertex(0.335938, 0.429688, 0.757813),new Vertex(0.414063, 0.390625, 0.75),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.335938, 0.429688, 0.757813),new Vertex(0.335938, 0.40625, 0.75),new Vertex(0.414063, 0.390625, 0.75),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.28125, 0.398438, 0.765625),new Vertex(-0.273438, 0.421875, 0.773438),new Vertex(-0.335938, 0.429688, 0.757813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.28125, 0.398438, 0.765625),new Vertex(-0.335938, 0.429688, 0.757813),new Vertex(-0.335938, 0.40625, 0.75),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.335938, 0.429688, 0.757813),new Vertex(0.273438, 0.421875, 0.773438),new Vertex(0.28125, 0.398438, 0.765625),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.335938, 0.429688, 0.757813),new Vertex(0.28125, 0.398438, 0.765625),new Vertex(0.335938, 0.40625, 0.75),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.234375, 0.359375, 0.757813),new Vertex(-0.210938, 0.375, 0.78125),new Vertex(-0.273438, 0.421875, 0.773438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.234375, 0.359375, 0.757813),new Vertex(-0.273438, 0.421875, 0.773438),new Vertex(-0.28125, 0.398438, 0.765625),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.273438, 0.421875, 0.773438),new Vertex(0.210938, 0.375, 0.78125),new Vertex(0.234375, 0.359375, 0.757813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.273438, 0.421875, 0.773438),new Vertex(0.234375, 0.359375, 0.757813),new Vertex(0.28125, 0.398438, 0.765625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.210938, 0.375, 0.78125),new Vertex(-0.164063, 0.414063, 0.773438),new Vertex(-0.25, 0.46875, 0.757813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.210938, 0.375, 0.78125),new Vertex(-0.25, 0.46875, 0.757813),new Vertex(-0.273438, 0.421875, 0.773438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.25, 0.46875, 0.757813),new Vertex(0.164063, 0.414063, 0.773438),new Vertex(0.210938, 0.375, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.25, 0.46875, 0.757813),new Vertex(0.210938, 0.375, 0.78125),new Vertex(0.273438, 0.421875, 0.773438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.273438, 0.421875, 0.773438),new Vertex(-0.25, 0.46875, 0.757813),new Vertex(-0.328125, 0.476563, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.273438, 0.421875, 0.773438),new Vertex(-0.328125, 0.476563, 0.742188),new Vertex(-0.335938, 0.429688, 0.757813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.328125, 0.476563, 0.742188),new Vertex(0.25, 0.46875, 0.757813),new Vertex(0.273438, 0.421875, 0.773438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.328125, 0.476563, 0.742188),new Vertex(0.273438, 0.421875, 0.773438),new Vertex(0.335938, 0.429688, 0.757813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.335938, 0.429688, 0.757813),new Vertex(-0.328125, 0.476563, 0.742188),new Vertex(-0.429688, 0.4375, 0.71875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.335938, 0.429688, 0.757813),new Vertex(-0.429688, 0.4375, 0.71875),new Vertex(-0.421875, 0.398438, 0.773438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.429688, 0.4375, 0.71875),new Vertex(0.328125, 0.476563, 0.742188),new Vertex(0.335938, 0.429688, 0.757813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.429688, 0.4375, 0.71875),new Vertex(0.335938, 0.429688, 0.757813),new Vertex(0.421875, 0.398438, 0.773438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.421875, 0.398438, 0.773438),new Vertex(-0.429688, 0.4375, 0.71875),new Vertex(-0.5625, 0.351563, 0.695313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.429688, 0.4375, 0.71875),new Vertex(-0.601563, 0.375, 0.664063),new Vertex(-0.5625, 0.351563, 0.695313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.601563, 0.375, 0.664063),new Vertex(0.429688, 0.4375, 0.71875),new Vertex(0.5625, 0.351563, 0.695313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.429688, 0.4375, 0.71875),new Vertex(0.421875, 0.398438, 0.773438),new Vertex(0.5625, 0.351563, 0.695313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.5625, 0.351563, 0.695313),new Vertex(-0.601563, 0.375, 0.664063),new Vertex(-0.585938, 0.289063, 0.6875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.601563, 0.375, 0.664063),new Vertex(-0.640625, 0.296875, 0.648438),new Vertex(-0.585938, 0.289063, 0.6875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.640625, 0.296875, 0.648438),new Vertex(0.601563, 0.375, 0.664063),new Vertex(0.585938, 0.289063, 0.6875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.601563, 0.375, 0.664063),new Vertex(0.5625, 0.351563, 0.695313),new Vertex(0.585938, 0.289063, 0.6875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.585938, 0.289063, 0.6875),new Vertex(-0.640625, 0.296875, 0.648438),new Vertex(-0.625, 0.1875, 0.648438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.585938, 0.289063, 0.6875),new Vertex(-0.625, 0.1875, 0.648438),new Vertex(-0.578125, 0.195313, 0.679688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.625, 0.1875, 0.648438),new Vertex(0.640625, 0.296875, 0.648438),new Vertex(0.585938, 0.289063, 0.6875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.625, 0.1875, 0.648438),new Vertex(0.585938, 0.289063, 0.6875),new Vertex(0.578125, 0.195313, 0.679688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.578125, 0.195313, 0.679688),new Vertex(-0.625, 0.1875, 0.648438),new Vertex(-0.492188, 0.0625, 0.671875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.578125, 0.195313, 0.679688),new Vertex(-0.492188, 0.0625, 0.671875),new Vertex(-0.476563, 0.101563, 0.71875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.492188, 0.0625, 0.671875),new Vertex(0.625, 0.1875, 0.648438),new Vertex(0.578125, 0.195313, 0.679688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.492188, 0.0625, 0.671875),new Vertex(0.578125, 0.195313, 0.679688),new Vertex(0.476563, 0.101563, 0.71875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.476563, 0.101563, 0.71875),new Vertex(-0.492188, 0.0625, 0.671875),new Vertex(-0.375, 0.015625, 0.703125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.476563, 0.101563, 0.71875),new Vertex(-0.375, 0.015625, 0.703125),new Vertex(-0.375, 0.0625, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.375, 0.015625, 0.703125),new Vertex(0.492188, 0.0625, 0.671875),new Vertex(0.476563, 0.101563, 0.71875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.375, 0.015625, 0.703125),new Vertex(0.476563, 0.101563, 0.71875),new Vertex(0.375, 0.0625, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.375, 0.0625, 0.742188),new Vertex(-0.375, 0.015625, 0.703125),new Vertex(-0.203125, 0.09375, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.375, 0.0625, 0.742188),new Vertex(-0.203125, 0.09375, 0.742188),new Vertex(-0.226563, 0.109375, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.203125, 0.09375, 0.742188),new Vertex(0.375, 0.015625, 0.703125),new Vertex(0.375, 0.0625, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.203125, 0.09375, 0.742188),new Vertex(0.375, 0.0625, 0.742188),new Vertex(0.226563, 0.109375, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.226563, 0.109375, 0.78125),new Vertex(-0.203125, 0.09375, 0.742188),new Vertex(-0.1875, 0.15625, 0.773438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.203125, 0.09375, 0.742188),new Vertex(-0.164063, 0.140625, 0.75),new Vertex(-0.1875, 0.15625, 0.773438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.164063, 0.140625, 0.75),new Vertex(0.203125, 0.09375, 0.742188),new Vertex(0.1875, 0.15625, 0.773438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.203125, 0.09375, 0.742188),new Vertex(0.226563, 0.109375, 0.78125),new Vertex(0.1875, 0.15625, 0.773438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.179688, 0.296875, 0.78125),new Vertex(-0.125, 0.304688, 0.765625),new Vertex(-0.210938, 0.375, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.125, 0.304688, 0.765625),new Vertex(-0.164063, 0.414063, 0.773438),new Vertex(-0.210938, 0.375, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.164063, 0.414063, 0.773438),new Vertex(0.125, 0.304688, 0.765625),new Vertex(0.210938, 0.375, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.125, 0.304688, 0.765625),new Vertex(0.179688, 0.296875, 0.78125),new Vertex(0.210938, 0.375, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.171875, 0.21875, 0.78125),new Vertex(-0.132813, 0.210938, 0.757813),new Vertex(-0.125, 0.304688, 0.765625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.171875, 0.21875, 0.78125),new Vertex(-0.125, 0.304688, 0.765625),new Vertex(-0.179688, 0.296875, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.125, 0.304688, 0.765625),new Vertex(0.132813, 0.210938, 0.757813),new Vertex(0.171875, 0.21875, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.125, 0.304688, 0.765625),new Vertex(0.171875, 0.21875, 0.78125),new Vertex(0.179688, 0.296875, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.1875, 0.15625, 0.773438),new Vertex(-0.164063, 0.140625, 0.75),new Vertex(-0.132813, 0.210938, 0.757813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.1875, 0.15625, 0.773438),new Vertex(-0.132813, 0.210938, 0.757813),new Vertex(-0.171875, 0.21875, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.132813, 0.210938, 0.757813),new Vertex(0.164063, 0.140625, 0.75),new Vertex(0.1875, 0.15625, 0.773438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.132813, 0.210938, 0.757813),new Vertex(0.1875, 0.15625, 0.773438),new Vertex(0.171875, 0.21875, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.046875, -0.851563, 0.632813),new Vertex(0.0, -0.859375, 0.632813),new Vertex(0.0, -0.78125, 0.65625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.046875, -0.851563, 0.632813),new Vertex(0.0, -0.78125, 0.65625),new Vertex(-0.09375, -0.75, 0.664063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.78125, 0.65625),new Vertex(0.0, -0.859375, 0.632813),new Vertex(0.046875, -0.851563, 0.632813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.78125, 0.65625),new Vertex(0.046875, -0.851563, 0.632813),new Vertex(0.09375, -0.75, 0.664063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.78125, 0.65625),new Vertex(0.0, -0.773438, 0.71875),new Vertex(-0.09375, -0.75, 0.664063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.773438, 0.71875),new Vertex(-0.09375, -0.742188, 0.726563),new Vertex(-0.09375, -0.75, 0.664063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.09375, -0.742188, 0.726563),new Vertex(0.0, -0.773438, 0.71875),new Vertex(0.09375, -0.75, 0.664063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.773438, 0.71875),new Vertex(0.0, -0.78125, 0.65625),new Vertex(0.09375, -0.75, 0.664063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.09375, -0.75, 0.664063),new Vertex(-0.09375, -0.742188, 0.726563),new Vertex(-0.09375, -0.820313, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.09375, -0.75, 0.664063),new Vertex(-0.09375, -0.820313, 0.710938),new Vertex(-0.09375, -0.8125, 0.640625),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.09375, -0.820313, 0.710938),new Vertex(0.09375, -0.742188, 0.726563),new Vertex(0.09375, -0.75, 0.664063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.09375, -0.820313, 0.710938),new Vertex(0.09375, -0.75, 0.664063),new Vertex(0.09375, -0.8125, 0.640625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.09375, -0.8125, 0.640625),new Vertex(-0.09375, -0.820313, 0.710938),new Vertex(-0.046875, -0.867188, 0.6875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.09375, -0.8125, 0.640625),new Vertex(-0.046875, -0.867188, 0.6875),new Vertex(-0.046875, -0.851563, 0.632813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.046875, -0.867188, 0.6875),new Vertex(0.09375, -0.820313, 0.710938),new Vertex(0.09375, -0.8125, 0.640625),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.046875, -0.867188, 0.6875),new Vertex(0.09375, -0.8125, 0.640625),new Vertex(0.046875, -0.851563, 0.632813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.046875, -0.851563, 0.632813),new Vertex(-0.046875, -0.867188, 0.6875),new Vertex(0.0, -0.859375, 0.632813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.046875, -0.867188, 0.6875),new Vertex(0.0, -0.875, 0.6875),new Vertex(0.0, -0.859375, 0.632813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.875, 0.6875),new Vertex(0.046875, -0.867188, 0.6875),new Vertex(0.0, -0.859375, 0.632813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.046875, -0.867188, 0.6875),new Vertex(0.046875, -0.851563, 0.632813),new Vertex(0.0, -0.859375, 0.632813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.046875, -0.867188, 0.6875),new Vertex(-0.0625, -0.882813, 0.695313),new Vertex(0.0, -0.890625, 0.6875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.046875, -0.867188, 0.6875),new Vertex(0.0, -0.890625, 0.6875),new Vertex(0.0, -0.875, 0.6875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.890625, 0.6875),new Vertex(0.0625, -0.882813, 0.695313),new Vertex(0.046875, -0.867188, 0.6875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.890625, 0.6875),new Vertex(0.046875, -0.867188, 0.6875),new Vertex(0.0, -0.875, 0.6875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.09375, -0.820313, 0.710938),new Vertex(-0.117188, -0.835938, 0.710938),new Vertex(-0.0625, -0.882813, 0.695313),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.09375, -0.820313, 0.710938),new Vertex(-0.0625, -0.882813, 0.695313),new Vertex(-0.046875, -0.867188, 0.6875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0625, -0.882813, 0.695313),new Vertex(0.117188, -0.835938, 0.710938),new Vertex(0.09375, -0.820313, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0625, -0.882813, 0.695313),new Vertex(0.09375, -0.820313, 0.710938),new Vertex(0.046875, -0.867188, 0.6875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.09375, -0.742188, 0.726563),new Vertex(-0.109375, -0.71875, 0.734375),new Vertex(-0.117188, -0.835938, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.09375, -0.742188, 0.726563),new Vertex(-0.117188, -0.835938, 0.710938),new Vertex(-0.09375, -0.820313, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.117188, -0.835938, 0.710938),new Vertex(0.109375, -0.71875, 0.734375),new Vertex(0.09375, -0.742188, 0.726563),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.117188, -0.835938, 0.710938),new Vertex(0.09375, -0.742188, 0.726563),new Vertex(0.09375, -0.820313, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.773438, 0.71875),new Vertex(0.0, -0.765625, 0.734375),new Vertex(-0.09375, -0.742188, 0.726563),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.765625, 0.734375),new Vertex(-0.109375, -0.71875, 0.734375),new Vertex(-0.09375, -0.742188, 0.726563),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.109375, -0.71875, 0.734375),new Vertex(0.0, -0.765625, 0.734375),new Vertex(0.09375, -0.742188, 0.726563),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.765625, 0.734375),new Vertex(0.0, -0.773438, 0.71875),new Vertex(0.09375, -0.742188, 0.726563),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.164063, -0.242188, 0.710938),new Vertex(-0.125, -0.101563, 0.8125),new Vertex(-0.203125, -0.1875, 0.5625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.164063, -0.242188, 0.710938),new Vertex(-0.203125, -0.1875, 0.5625),new Vertex(-0.234375, -0.25, 0.554688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.203125, -0.1875, 0.5625),new Vertex(0.125, -0.101563, 0.8125),new Vertex(0.164063, -0.242188, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.203125, -0.1875, 0.5625),new Vertex(0.164063, -0.242188, 0.710938),new Vertex(0.234375, -0.25, 0.554688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.164063, -0.242188, 0.710938),new Vertex(-0.234375, -0.25, 0.554688),new Vertex(-0.179688, -0.3125, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.234375, -0.25, 0.554688),new Vertex(-0.257813, -0.3125, 0.554688),new Vertex(-0.179688, -0.3125, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.257813, -0.3125, 0.554688),new Vertex(0.234375, -0.25, 0.554688),new Vertex(0.179688, -0.3125, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.234375, -0.25, 0.554688),new Vertex(0.164063, -0.242188, 0.710938),new Vertex(0.179688, -0.3125, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.179688, -0.3125, 0.710938),new Vertex(-0.257813, -0.3125, 0.554688),new Vertex(-0.210938, -0.445313, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.257813, -0.3125, 0.554688),new Vertex(-0.3125, -0.4375, 0.570313),new Vertex(-0.210938, -0.445313, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.3125, -0.4375, 0.570313),new Vertex(0.257813, -0.3125, 0.554688),new Vertex(0.210938, -0.445313, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.257813, -0.3125, 0.554688),new Vertex(0.179688, -0.3125, 0.710938),new Vertex(0.210938, -0.445313, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.210938, -0.445313, 0.710938),new Vertex(-0.078125, -0.445313, 0.75),new Vertex(-0.179688, -0.3125, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.078125, -0.445313, 0.75),new Vertex(-0.085938, -0.289063, 0.742188),new Vertex(-0.179688, -0.3125, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.085938, -0.289063, 0.742188),new Vertex(0.078125, -0.445313, 0.75),new Vertex(0.179688, -0.3125, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.078125, -0.445313, 0.75),new Vertex(0.210938, -0.445313, 0.710938),new Vertex(0.179688, -0.3125, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.179688, -0.3125, 0.710938),new Vertex(-0.085938, -0.289063, 0.742188),new Vertex(-0.164063, -0.242188, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.085938, -0.289063, 0.742188),new Vertex(-0.125, -0.226563, 0.75),new Vertex(-0.164063, -0.242188, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.125, -0.226563, 0.75),new Vertex(0.085938, -0.289063, 0.742188),new Vertex(0.164063, -0.242188, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.085938, -0.289063, 0.742188),new Vertex(0.179688, -0.3125, 0.710938),new Vertex(0.164063, -0.242188, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.164063, -0.242188, 0.710938),new Vertex(-0.125, -0.226563, 0.75),new Vertex(-0.101563, -0.148438, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.164063, -0.242188, 0.710938),new Vertex(-0.101563, -0.148438, 0.742188),new Vertex(-0.125, -0.101563, 0.8125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.101563, -0.148438, 0.742188),new Vertex(0.125, -0.226563, 0.75),new Vertex(0.164063, -0.242188, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.101563, -0.148438, 0.742188),new Vertex(0.164063, -0.242188, 0.710938),new Vertex(0.125, -0.101563, 0.8125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.125, -0.101563, 0.8125),new Vertex(-0.101563, -0.148438, 0.742188),new Vertex(0.0, -0.140625, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.125, -0.101563, 0.8125),new Vertex(0.0, -0.140625, 0.742188),new Vertex(0.0, 0.046875, 0.726563),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.140625, 0.742188),new Vertex(0.101563, -0.148438, 0.742188),new Vertex(0.125, -0.101563, 0.8125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.140625, 0.742188),new Vertex(0.125, -0.101563, 0.8125),new Vertex(0.0, 0.046875, 0.726563),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.078125, -0.25, 0.804688),new Vertex(0.0, -0.289063, 0.804688),new Vertex(0.0, -0.203125, 0.828125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.078125, -0.25, 0.804688),new Vertex(0.0, -0.203125, 0.828125),new Vertex(-0.109375, -0.226563, 0.828125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.203125, 0.828125),new Vertex(0.0, -0.289063, 0.804688),new Vertex(0.078125, -0.25, 0.804688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.203125, 0.828125),new Vertex(0.078125, -0.25, 0.804688),new Vertex(0.109375, -0.226563, 0.828125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.09375, -0.15625, 0.8125),new Vertex(-0.109375, -0.226563, 0.828125),new Vertex(-0.046875, -0.148438, 0.8125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.109375, -0.226563, 0.828125),new Vertex(0.0, -0.203125, 0.828125),new Vertex(-0.046875, -0.148438, 0.8125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.203125, 0.828125),new Vertex(0.109375, -0.226563, 0.828125),new Vertex(0.046875, -0.148438, 0.8125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.109375, -0.226563, 0.828125),new Vertex(0.09375, -0.15625, 0.8125),new Vertex(0.046875, -0.148438, 0.8125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.078125, -0.25, 0.804688),new Vertex(-0.109375, -0.226563, 0.828125),new Vertex(-0.132813, -0.226563, 0.796875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.078125, -0.25, 0.804688),new Vertex(-0.132813, -0.226563, 0.796875),new Vertex(-0.09375, -0.273438, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.132813, -0.226563, 0.796875),new Vertex(0.109375, -0.226563, 0.828125),new Vertex(0.078125, -0.25, 0.804688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.132813, -0.226563, 0.796875),new Vertex(0.078125, -0.25, 0.804688),new Vertex(0.09375, -0.273438, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.109375, -0.226563, 0.828125),new Vertex(-0.09375, -0.15625, 0.8125),new Vertex(-0.132813, -0.226563, 0.796875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.09375, -0.15625, 0.8125),new Vertex(-0.109375, -0.132813, 0.78125),new Vertex(-0.132813, -0.226563, 0.796875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.109375, -0.132813, 0.78125),new Vertex(0.09375, -0.15625, 0.8125),new Vertex(0.132813, -0.226563, 0.796875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.09375, -0.15625, 0.8125),new Vertex(0.109375, -0.226563, 0.828125),new Vertex(0.132813, -0.226563, 0.796875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.09375, -0.15625, 0.8125),new Vertex(-0.046875, -0.148438, 0.8125),new Vertex(-0.039063, -0.125, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.09375, -0.15625, 0.8125),new Vertex(-0.039063, -0.125, 0.78125),new Vertex(-0.109375, -0.132813, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.039063, -0.125, 0.78125),new Vertex(0.046875, -0.148438, 0.8125),new Vertex(0.09375, -0.15625, 0.8125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.039063, -0.125, 0.78125),new Vertex(0.09375, -0.15625, 0.8125),new Vertex(0.109375, -0.132813, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.046875, -0.148438, 0.8125),new Vertex(0.0, -0.203125, 0.828125),new Vertex(0.0, -0.1875, 0.796875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.046875, -0.148438, 0.8125),new Vertex(0.0, -0.1875, 0.796875),new Vertex(-0.039063, -0.125, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.1875, 0.796875),new Vertex(0.0, -0.203125, 0.828125),new Vertex(0.046875, -0.148438, 0.8125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.1875, 0.796875),new Vertex(0.046875, -0.148438, 0.8125),new Vertex(0.039063, -0.125, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.078125, -0.25, 0.804688),new Vertex(-0.09375, -0.273438, 0.78125),new Vertex(0.0, -0.289063, 0.804688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.09375, -0.273438, 0.78125),new Vertex(0.0, -0.320313, 0.78125),new Vertex(0.0, -0.289063, 0.804688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.320313, 0.78125),new Vertex(0.09375, -0.273438, 0.78125),new Vertex(0.0, -0.289063, 0.804688),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.09375, -0.273438, 0.78125),new Vertex(0.078125, -0.25, 0.804688),new Vertex(0.0, -0.289063, 0.804688),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.09375, -0.273438, 0.78125),new Vertex(-0.085938, -0.289063, 0.742188),new Vertex(0.0, -0.320313, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.085938, -0.289063, 0.742188),new Vertex(0.0, -0.328125, 0.742188),new Vertex(0.0, -0.320313, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.328125, 0.742188),new Vertex(0.085938, -0.289063, 0.742188),new Vertex(0.0, -0.320313, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.085938, -0.289063, 0.742188),new Vertex(0.09375, -0.273438, 0.78125),new Vertex(0.0, -0.320313, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.039063, -0.125, 0.78125),new Vertex(0.0, -0.1875, 0.796875),new Vertex(0.0, -0.140625, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.1875, 0.796875),new Vertex(0.0, -0.195313, 0.75),new Vertex(0.0, -0.140625, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.195313, 0.75),new Vertex(0.0, -0.1875, 0.796875),new Vertex(0.0, -0.140625, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.1875, 0.796875),new Vertex(0.039063, -0.125, 0.78125),new Vertex(0.0, -0.140625, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.109375, -0.132813, 0.78125),new Vertex(-0.039063, -0.125, 0.78125),new Vertex(-0.101563, -0.148438, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.039063, -0.125, 0.78125),new Vertex(0.0, -0.140625, 0.742188),new Vertex(-0.101563, -0.148438, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.140625, 0.742188),new Vertex(0.039063, -0.125, 0.78125),new Vertex(0.101563, -0.148438, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.039063, -0.125, 0.78125),new Vertex(0.109375, -0.132813, 0.78125),new Vertex(0.101563, -0.148438, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.132813, -0.226563, 0.796875),new Vertex(-0.109375, -0.132813, 0.78125),new Vertex(-0.125, -0.226563, 0.75),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.109375, -0.132813, 0.78125),new Vertex(-0.101563, -0.148438, 0.742188),new Vertex(-0.125, -0.226563, 0.75),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.101563, -0.148438, 0.742188),new Vertex(0.109375, -0.132813, 0.78125),new Vertex(0.125, -0.226563, 0.75),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.109375, -0.132813, 0.78125),new Vertex(0.132813, -0.226563, 0.796875),new Vertex(0.125, -0.226563, 0.75),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.09375, -0.273438, 0.78125),new Vertex(-0.132813, -0.226563, 0.796875),new Vertex(-0.125, -0.226563, 0.75),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.09375, -0.273438, 0.78125),new Vertex(-0.125, -0.226563, 0.75),new Vertex(-0.085938, -0.289063, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.125, -0.226563, 0.75),new Vertex(0.132813, -0.226563, 0.796875),new Vertex(0.09375, -0.273438, 0.78125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.125, -0.226563, 0.75),new Vertex(0.09375, -0.273438, 0.78125),new Vertex(0.085938, -0.289063, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.117188, -0.6875, 0.734375),new Vertex(-0.109375, -0.71875, 0.734375),new Vertex(0.0, -0.679688, 0.734375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.109375, -0.71875, 0.734375),new Vertex(0.0, -0.765625, 0.734375),new Vertex(0.0, -0.679688, 0.734375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.765625, 0.734375),new Vertex(0.109375, -0.71875, 0.734375),new Vertex(0.0, -0.679688, 0.734375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.109375, -0.71875, 0.734375),new Vertex(0.117188, -0.6875, 0.734375),new Vertex(0.0, -0.679688, 0.734375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.445313, 0.75),new Vertex(-0.078125, -0.445313, 0.75),new Vertex(0.0, -0.679688, 0.734375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.078125, -0.445313, 0.75),new Vertex(-0.117188, -0.6875, 0.734375),new Vertex(0.0, -0.679688, 0.734375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.117188, -0.6875, 0.734375),new Vertex(0.078125, -0.445313, 0.75),new Vertex(0.0, -0.679688, 0.734375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.078125, -0.445313, 0.75),new Vertex(0.0, -0.445313, 0.75),new Vertex(0.0, -0.679688, 0.734375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.445313, 0.75),new Vertex(0.0, -0.328125, 0.742188),new Vertex(-0.078125, -0.445313, 0.75),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.328125, 0.742188),new Vertex(-0.085938, -0.289063, 0.742188),new Vertex(-0.078125, -0.445313, 0.75),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.085938, -0.289063, 0.742188),new Vertex(0.0, -0.328125, 0.742188),new Vertex(0.078125, -0.445313, 0.75),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.328125, 0.742188),new Vertex(0.0, -0.445313, 0.75),new Vertex(0.078125, -0.445313, 0.75),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.25, -0.703125, 0.6875),new Vertex(-0.265625, -0.820313, 0.664063),new Vertex(-0.109375, -0.71875, 0.734375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.25, -0.703125, 0.6875),new Vertex(-0.109375, -0.71875, 0.734375),new Vertex(-0.117188, -0.6875, 0.734375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.109375, -0.71875, 0.734375),new Vertex(0.265625, -0.820313, 0.664063),new Vertex(0.25, -0.703125, 0.6875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.109375, -0.71875, 0.734375),new Vertex(0.25, -0.703125, 0.6875),new Vertex(0.117188, -0.6875, 0.734375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.117188, -0.6875, 0.734375),new Vertex(-0.078125, -0.445313, 0.75),new Vertex(-0.210938, -0.445313, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.117188, -0.6875, 0.734375),new Vertex(-0.210938, -0.445313, 0.710938),new Vertex(-0.25, -0.703125, 0.6875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.210938, -0.445313, 0.710938),new Vertex(0.078125, -0.445313, 0.75),new Vertex(0.117188, -0.6875, 0.734375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.210938, -0.445313, 0.710938),new Vertex(0.117188, -0.6875, 0.734375),new Vertex(0.25, -0.703125, 0.6875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.234375, -0.914063, 0.632813),new Vertex(-0.117188, -0.835938, 0.710938),new Vertex(-0.265625, -0.820313, 0.664063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.117188, -0.835938, 0.710938),new Vertex(-0.109375, -0.71875, 0.734375),new Vertex(-0.265625, -0.820313, 0.664063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.109375, -0.71875, 0.734375),new Vertex(0.117188, -0.835938, 0.710938),new Vertex(0.265625, -0.820313, 0.664063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.117188, -0.835938, 0.710938),new Vertex(0.234375, -0.914063, 0.632813),new Vertex(0.265625, -0.820313, 0.664063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.164063, -0.929688, 0.632813),new Vertex(-0.0625, -0.882813, 0.695313),new Vertex(-0.117188, -0.835938, 0.710938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.164063, -0.929688, 0.632813),new Vertex(-0.117188, -0.835938, 0.710938),new Vertex(-0.234375, -0.914063, 0.632813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.117188, -0.835938, 0.710938),new Vertex(0.0625, -0.882813, 0.695313),new Vertex(0.164063, -0.929688, 0.632813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.117188, -0.835938, 0.710938),new Vertex(0.164063, -0.929688, 0.632813),new Vertex(0.234375, -0.914063, 0.632813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.945313, 0.640625),new Vertex(0.0, -0.890625, 0.6875),new Vertex(-0.0625, -0.882813, 0.695313),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, -0.945313, 0.640625),new Vertex(-0.0625, -0.882813, 0.695313),new Vertex(-0.164063, -0.929688, 0.632813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0625, -0.882813, 0.695313),new Vertex(0.0, -0.890625, 0.6875),new Vertex(0.0, -0.945313, 0.640625),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0625, -0.882813, 0.695313),new Vertex(0.0, -0.945313, 0.640625),new Vertex(0.164063, -0.929688, 0.632813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.132813, 0.210938, 0.757813),new Vertex(-0.164063, 0.140625, 0.75),new Vertex(0.0, 0.210938, 0.765625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.164063, 0.140625, 0.75),new Vertex(0.0, 0.046875, 0.726563),new Vertex(0.0, 0.210938, 0.765625),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, 0.046875, 0.726563),new Vertex(0.164063, 0.140625, 0.75),new Vertex(0.0, 0.210938, 0.765625),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.164063, 0.140625, 0.75),new Vertex(0.132813, 0.210938, 0.757813),new Vertex(0.0, 0.210938, 0.765625),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, 0.210938, 0.765625),new Vertex(0.0, 0.351563, 0.820313),new Vertex(-0.125, 0.304688, 0.765625),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, 0.210938, 0.765625),new Vertex(-0.125, 0.304688, 0.765625),new Vertex(-0.132813, 0.210938, 0.757813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.125, 0.304688, 0.765625),new Vertex(0.0, 0.351563, 0.820313),new Vertex(0.0, 0.210938, 0.765625),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.125, 0.304688, 0.765625),new Vertex(0.0, 0.210938, 0.765625),new Vertex(0.132813, 0.210938, 0.757813),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, 0.351563, 0.820313),new Vertex(-0.101563, 0.429688, 0.84375),new Vertex(-0.125, 0.304688, 0.765625),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.101563, 0.429688, 0.84375),new Vertex(-0.164063, 0.414063, 0.773438),new Vertex(-0.125, 0.304688, 0.765625),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.164063, 0.414063, 0.773438),new Vertex(0.101563, 0.429688, 0.84375),new Vertex(0.125, 0.304688, 0.765625),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.101563, 0.429688, 0.84375),new Vertex(0.0, 0.351563, 0.820313),new Vertex(0.125, 0.304688, 0.765625),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, 0.046875, 0.726563),new Vertex(-0.164063, 0.140625, 0.75),new Vertex(-0.203125, 0.09375, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, 0.046875, 0.726563),new Vertex(-0.203125, 0.09375, 0.742188),new Vertex(-0.125, -0.101563, 0.8125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.203125, 0.09375, 0.742188),new Vertex(0.164063, 0.140625, 0.75),new Vertex(0.0, 0.046875, 0.726563),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.203125, 0.09375, 0.742188),new Vertex(0.0, 0.046875, 0.726563),new Vertex(0.125, -0.101563, 0.8125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.398438, -0.046875, 0.671875),new Vertex(-0.125, -0.101563, 0.8125),new Vertex(-0.203125, 0.09375, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.398438, -0.046875, 0.671875),new Vertex(-0.203125, 0.09375, 0.742188),new Vertex(-0.375, 0.015625, 0.703125),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.203125, 0.09375, 0.742188),new Vertex(0.125, -0.101563, 0.8125),new Vertex(0.398438, -0.046875, 0.671875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.203125, 0.09375, 0.742188),new Vertex(0.398438, -0.046875, 0.671875),new Vertex(0.375, 0.015625, 0.703125),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.617188, 0.054688, 0.625),new Vertex(-0.398438, -0.046875, 0.671875),new Vertex(-0.492188, 0.0625, 0.671875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.398438, -0.046875, 0.671875),new Vertex(-0.375, 0.015625, 0.703125),new Vertex(-0.492188, 0.0625, 0.671875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.375, 0.015625, 0.703125),new Vertex(0.398438, -0.046875, 0.671875),new Vertex(0.492188, 0.0625, 0.671875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.398438, -0.046875, 0.671875),new Vertex(0.617188, 0.054688, 0.625),new Vertex(0.492188, 0.0625, 0.671875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.726563, 0.203125, 0.601563),new Vertex(-0.617188, 0.054688, 0.625),new Vertex(-0.625, 0.1875, 0.648438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.617188, 0.054688, 0.625),new Vertex(-0.492188, 0.0625, 0.671875),new Vertex(-0.625, 0.1875, 0.648438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.492188, 0.0625, 0.671875),new Vertex(0.617188, 0.054688, 0.625),new Vertex(0.625, 0.1875, 0.648438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.617188, 0.054688, 0.625),new Vertex(0.726563, 0.203125, 0.601563),new Vertex(0.625, 0.1875, 0.648438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.742188, 0.375, 0.65625),new Vertex(-0.726563, 0.203125, 0.601563),new Vertex(-0.640625, 0.296875, 0.648438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.726563, 0.203125, 0.601563),new Vertex(-0.625, 0.1875, 0.648438),new Vertex(-0.640625, 0.296875, 0.648438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.625, 0.1875, 0.648438),new Vertex(0.726563, 0.203125, 0.601563),new Vertex(0.640625, 0.296875, 0.648438),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.726563, 0.203125, 0.601563),new Vertex(0.742188, 0.375, 0.65625),new Vertex(0.640625, 0.296875, 0.648438),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.6875, 0.414063, 0.726563),new Vertex(-0.742188, 0.375, 0.65625),new Vertex(-0.601563, 0.375, 0.664063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.742188, 0.375, 0.65625),new Vertex(-0.640625, 0.296875, 0.648438),new Vertex(-0.601563, 0.375, 0.664063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.640625, 0.296875, 0.648438),new Vertex(0.742188, 0.375, 0.65625),new Vertex(0.601563, 0.375, 0.664063),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.742188, 0.375, 0.65625),new Vertex(0.6875, 0.414063, 0.726563),new Vertex(0.601563, 0.375, 0.664063),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.4375, 0.546875, 0.796875),new Vertex(-0.6875, 0.414063, 0.726563),new Vertex(-0.429688, 0.4375, 0.71875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.6875, 0.414063, 0.726563),new Vertex(-0.601563, 0.375, 0.664063),new Vertex(-0.429688, 0.4375, 0.71875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.601563, 0.375, 0.664063),new Vertex(0.6875, 0.414063, 0.726563),new Vertex(0.429688, 0.4375, 0.71875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.6875, 0.414063, 0.726563),new Vertex(0.4375, 0.546875, 0.796875),new Vertex(0.429688, 0.4375, 0.71875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.3125, 0.640625, 0.835938),new Vertex(-0.4375, 0.546875, 0.796875),new Vertex(-0.328125, 0.476563, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.4375, 0.546875, 0.796875),new Vertex(-0.429688, 0.4375, 0.71875),new Vertex(-0.328125, 0.476563, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.429688, 0.4375, 0.71875),new Vertex(0.4375, 0.546875, 0.796875),new Vertex(0.328125, 0.476563, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.4375, 0.546875, 0.796875),new Vertex(0.3125, 0.640625, 0.835938),new Vertex(0.328125, 0.476563, 0.742188),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.3125, 0.640625, 0.835938),new Vertex(-0.328125, 0.476563, 0.742188),new Vertex(-0.25, 0.46875, 0.757813),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.3125, 0.640625, 0.835938),new Vertex(-0.25, 0.46875, 0.757813),new Vertex(-0.203125, 0.617188, 0.851563),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.25, 0.46875, 0.757813),new Vertex(0.328125, 0.476563, 0.742188),new Vertex(0.3125, 0.640625, 0.835938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.25, 0.46875, 0.757813),new Vertex(0.3125, 0.640625, 0.835938),new Vertex(0.203125, 0.617188, 0.851563),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.203125, 0.617188, 0.851563),new Vertex(-0.25, 0.46875, 0.757813),new Vertex(-0.101563, 0.429688, 0.84375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.25, 0.46875, 0.757813),new Vertex(-0.164063, 0.414063, 0.773438),new Vertex(-0.101563, 0.429688, 0.84375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.164063, 0.414063, 0.773438),new Vertex(0.25, 0.46875, 0.757813),new Vertex(0.101563, 0.429688, 0.84375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.25, 0.46875, 0.757813),new Vertex(0.203125, 0.617188, 0.851563),new Vertex(0.101563, 0.429688, 0.84375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, 0.351563, 0.820313),new Vertex(0.0, 0.429688, 0.742188),new Vertex(-0.101563, 0.429688, 0.84375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, 0.429688, 0.742188),new Vertex(-0.0625, 0.492188, 0.75),new Vertex(-0.101563, 0.429688, 0.84375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0625, 0.492188, 0.75),new Vertex(0.0, 0.429688, 0.742188),new Vertex(0.101563, 0.429688, 0.84375),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0, 0.429688, 0.742188),new Vertex(0.0, 0.351563, 0.820313),new Vertex(0.101563, 0.429688, 0.84375),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.101563, 0.429688, 0.84375),new Vertex(-0.0625, 0.492188, 0.75),new Vertex(-0.203125, 0.617188, 0.851563),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.0625, 0.492188, 0.75),new Vertex(-0.15625, 0.71875, 0.757813),new Vertex(-0.203125, 0.617188, 0.851563),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.15625, 0.71875, 0.757813),new Vertex(0.0625, 0.492188, 0.75),new Vertex(0.203125, 0.617188, 0.851563),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.0625, 0.492188, 0.75),new Vertex(0.101563, 0.429688, 0.84375),new Vertex(0.203125, 0.617188, 0.851563),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.203125, 0.617188, 0.851563),new Vertex(-0.15625, 0.71875, 0.757813),new Vertex(-0.3125, 0.640625, 0.835938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.15625, 0.71875, 0.757813),new Vertex(-0.320313, 0.757813, 0.734375),new Vertex(-0.3125, 0.640625, 0.835938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.320313, 0.757813, 0.734375),new Vertex(0.15625, 0.71875, 0.757813),new Vertex(0.3125, 0.640625, 0.835938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.15625, 0.71875, 0.757813),new Vertex(0.203125, 0.617188, 0.851563),new Vertex(0.3125, 0.640625, 0.835938),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.3125, 0.640625, 0.835938),new Vertex(-0.320313, 0.757813, 0.734375),new Vertex(-0.492188, 0.601563, 0.6875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.3125, 0.640625, 0.835938),new Vertex(-0.492188, 0.601563, 0.6875),new Vertex(-0.4375, 0.546875, 0.796875),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.492188, 0.601563, 0.6875),new Vertex(0.320313, 0.757813, 0.734375),new Vertex(0.3125, 0.640625, 0.835938),Color.WHITE));
                tris.add(new Triangle(new Vertex(0.492188, 0.601563, 0.6875),new Vertex(0.3125, 0.640625, 0.835938),new Vertex(0.4375, 0.546875, 0.796875),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.4375, 0.546875, 0.796875),new Vertex(-0.492188, 0.601563, 0.6875),new Vertex(-0.6875, 0.414063, 0.726563),Color.WHITE));
                tris.add(new Triangle(new Vertex(-0.492188, 0.601563, 0.6875),new Vertex(-0.710938, 0.484375, 0.625),new Vertex(-0.6875, 0.414063, 0.726563),Color.WHITE));

                return tris;
            }
        };

        yawSlider.addChangeListener(listener -> {
            System.out.println("yaw: " + yawSlider.getValue());
            renderPanel.repaint();
        });
        pitchSlider.addChangeListener(listener -> {
            System.out.println("pitch: " + pitchSlider.getValue());
            renderPanel.repaint();
        });
        rollSlider.addChangeListener(listener -> {
            System.out.println("roll: " + rollSlider.getValue());
            renderPanel.repaint();
        });

        add(renderPanel, BorderLayout.CENTER);

        setVisible(true);
    }
}
